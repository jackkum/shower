
adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004c  00800060  000012dc  00001370  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000087  008000ac  008000ac  000013bc  2**0
                  ALLOC
  3 .stab         00000f24  00000000  00000000  000013bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000343  00000000  00000000  000022e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00002628  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000117c  00000000  00000000  00002788  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005b9  00000000  00000000  00003904  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c26  00000000  00000000  00003ebd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  00004ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000329  00000000  00000000  00004d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ae6  00000000  00000000  000050c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00005ba7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	89 c0       	rjmp	.+274    	; 0x116 <__vector_1>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	16 c3       	rjmp	.+1580   	; 0x63e <__vector_8>
      12:	3e c0       	rjmp	.+124    	; 0x90 <__vector_9>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	10 e0       	ldi	r17, 0x00	; 0
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	ec ed       	ldi	r30, 0xDC	; 220
      3a:	f2 e1       	ldi	r31, 0x12	; 18
      3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0
      42:	ac 3a       	cpi	r26, 0xAC	; 172
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
      48:	11 e0       	ldi	r17, 0x01	; 1
      4a:	ac ea       	ldi	r26, 0xAC	; 172
      4c:	b0 e0       	ldi	r27, 0x00	; 0
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	a3 33       	cpi	r26, 0x33	; 51
      54:	b1 07       	cpc	r27, r17
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	42 d3       	rcall	.+1668   	; 0x6de <main>
      5a:	3e c9       	rjmp	.-3460   	; 0xfffff2d8 <__eeprom_end+0xff7ef2d8>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <ir_start_timer>:
void checkChanel(const unsigned char index, const unsigned char mask, const unsigned int level);
void reDraw(void);

static void ir_start_timer()
{
	TIMSK |= (1 << TOIE0);
      5e:	89 b7       	in	r24, 0x39	; 57
      60:	81 60       	ori	r24, 0x01	; 1
      62:	89 bf       	out	0x39, r24	; 57
	TCNT0 = 0;
      64:	12 be       	out	0x32, r1	; 50
	TCCR0 = TimerClock;
      66:	85 e0       	ldi	r24, 0x05	; 5
      68:	83 bf       	out	0x33, r24	; 51
}
      6a:	08 95       	ret

0000006c <RS_putc>:

void RS_putc(char byte)
{
	while (!(UCSRA&(1<<5)));
      6c:	5d 9b       	sbis	0x0b, 5	; 11
      6e:	fe cf       	rjmp	.-4      	; 0x6c <RS_putc>
	UDR = byte;
      70:	8c b9       	out	0x0c, r24	; 12
}
      72:	08 95       	ret

00000074 <RS_puts>:

void RS_puts(char * str)
{
      74:	cf 93       	push	r28
      76:	df 93       	push	r29
      78:	ec 01       	movw	r28, r24
	char c;
	while((c = *str++) != 0) RS_putc(c);
      7a:	88 81       	ld	r24, Y
      7c:	88 23       	and	r24, r24
      7e:	29 f0       	breq	.+10     	; 0x8a <RS_puts+0x16>
      80:	21 96       	adiw	r28, 0x01	; 1
      82:	f4 df       	rcall	.-24     	; 0x6c <RS_putc>
      84:	89 91       	ld	r24, Y+
      86:	88 23       	and	r24, r24
      88:	e1 f7       	brne	.-8      	; 0x82 <RS_puts+0xe>
}
      8a:	df 91       	pop	r29
      8c:	cf 91       	pop	r28
      8e:	08 95       	ret

00000090 <__vector_9>:
	
	reDraw();
}

ISR(TIMER0_OVF_vect)
{
      90:	1f 92       	push	r1
      92:	0f 92       	push	r0
      94:	0f b6       	in	r0, 0x3f	; 63
      96:	0f 92       	push	r0
      98:	11 24       	eor	r1, r1
      9a:	4f 93       	push	r20
      9c:	5f 93       	push	r21
      9e:	6f 93       	push	r22
      a0:	7f 93       	push	r23
      a2:	8f 93       	push	r24
      a4:	9f 93       	push	r25
      a6:	af 93       	push	r26
      a8:	bf 93       	push	r27
      aa:	ef 93       	push	r30
      ac:	ff 93       	push	r31
	ir.code = ir.rx_buffer;
      ae:	8b ec       	ldi	r24, 0xCB	; 203
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	40 91 cb 00 	lds	r20, 0x00CB
      b6:	50 91 cc 00 	lds	r21, 0x00CC
      ba:	60 91 cd 00 	lds	r22, 0x00CD
      be:	70 91 ce 00 	lds	r23, 0x00CE
      c2:	fc 01       	movw	r30, r24
      c4:	72 93       	st	-Z, r23
      c6:	62 93       	st	-Z, r22
      c8:	52 93       	st	-Z, r21
      ca:	42 93       	st	-Z, r20
	ir.rx_buffer = 0;
      cc:	10 92 cb 00 	sts	0x00CB, r1
      d0:	10 92 cc 00 	sts	0x00CC, r1
      d4:	10 92 cd 00 	sts	0x00CD, r1
      d8:	10 92 ce 00 	sts	0x00CE, r1
	ir.rx_started = 0;
      dc:	05 97       	sbiw	r24, 0x05	; 5
      de:	dc 01       	movw	r26, r24
      e0:	1c 92       	st	X, r1
	if(ir.code == 0)
      e2:	80 81       	ld	r24, Z
      e4:	91 81       	ldd	r25, Z+1	; 0x01
      e6:	a2 81       	ldd	r26, Z+2	; 0x02
      e8:	b3 81       	ldd	r27, Z+3	; 0x03
      ea:	00 97       	sbiw	r24, 0x00	; 0
      ec:	a1 05       	cpc	r26, r1
      ee:	b1 05       	cpc	r27, r1
      f0:	09 f4       	brne	.+2      	; 0xf4 <__vector_9+0x64>
	TCCR0 = 0;
      f2:	13 be       	out	0x33, r1	; 51
	TCNT0 = TimerReloadValue;
      f4:	86 e9       	ldi	r24, 0x96	; 150
      f6:	82 bf       	out	0x32, r24	; 50
}
      f8:	ff 91       	pop	r31
      fa:	ef 91       	pop	r30
      fc:	bf 91       	pop	r27
      fe:	af 91       	pop	r26
     100:	9f 91       	pop	r25
     102:	8f 91       	pop	r24
     104:	7f 91       	pop	r23
     106:	6f 91       	pop	r22
     108:	5f 91       	pop	r21
     10a:	4f 91       	pop	r20
     10c:	0f 90       	pop	r0
     10e:	0f be       	out	0x3f, r0	; 63
     110:	0f 90       	pop	r0
     112:	1f 90       	pop	r1
     114:	18 95       	reti

00000116 <__vector_1>:

// внешнее прерывание по фронту и спаду
ISR(INT0_vect)
{
     116:	1f 92       	push	r1
     118:	0f 92       	push	r0
     11a:	0f b6       	in	r0, 0x3f	; 63
     11c:	0f 92       	push	r0
     11e:	11 24       	eor	r1, r1
     120:	2f 93       	push	r18
     122:	3f 93       	push	r19
     124:	4f 93       	push	r20
     126:	5f 93       	push	r21
     128:	6f 93       	push	r22
     12a:	7f 93       	push	r23
     12c:	8f 93       	push	r24
     12e:	9f 93       	push	r25
     130:	af 93       	push	r26
     132:	bf 93       	push	r27
     134:	ef 93       	push	r30
     136:	ff 93       	push	r31
	uint8_t delta;
	if(ir.rx_started)
     138:	80 91 c6 00 	lds	r24, 0x00C6
     13c:	88 23       	and	r24, r24
     13e:	59 f1       	breq	.+86     	; 0x196 <__vector_1+0x80>
	{
		// если длительность импульса/паузы больше пороговой
		// сдвигаем в буфер единицу иначе ноль.
		delta = TCNT0 - TimerReloadValue;
     140:	22 b7       	in	r18, 0x32	; 50
		ir.rx_buffer <<= 1;
     142:	80 91 cb 00 	lds	r24, 0x00CB
     146:	90 91 cc 00 	lds	r25, 0x00CC
     14a:	a0 91 cd 00 	lds	r26, 0x00CD
     14e:	b0 91 ce 00 	lds	r27, 0x00CE
     152:	88 0f       	add	r24, r24
     154:	99 1f       	adc	r25, r25
     156:	aa 1f       	adc	r26, r26
     158:	bb 1f       	adc	r27, r27
     15a:	80 93 cb 00 	sts	0x00CB, r24
     15e:	90 93 cc 00 	sts	0x00CC, r25
     162:	a0 93 cd 00 	sts	0x00CD, r26
     166:	b0 93 ce 00 	sts	0x00CE, r27
	uint8_t delta;
	if(ir.rx_started)
	{
		// если длительность импульса/паузы больше пороговой
		// сдвигаем в буфер единицу иначе ноль.
		delta = TCNT0 - TimerReloadValue;
     16a:	82 2f       	mov	r24, r18
     16c:	86 59       	subi	r24, 0x96	; 150
		ir.rx_buffer <<= 1;
		if(delta > IrPulseThershold) ir.rx_buffer |= 1;
     16e:	8a 30       	cpi	r24, 0x0A	; 10
     170:	b0 f0       	brcs	.+44     	; 0x19e <__vector_1+0x88>
     172:	80 91 cb 00 	lds	r24, 0x00CB
     176:	90 91 cc 00 	lds	r25, 0x00CC
     17a:	a0 91 cd 00 	lds	r26, 0x00CD
     17e:	b0 91 ce 00 	lds	r27, 0x00CE
     182:	81 60       	ori	r24, 0x01	; 1
     184:	80 93 cb 00 	sts	0x00CB, r24
     188:	90 93 cc 00 	sts	0x00CC, r25
     18c:	a0 93 cd 00 	sts	0x00CD, r26
     190:	b0 93 ce 00 	sts	0x00CE, r27
     194:	04 c0       	rjmp	.+8      	; 0x19e <__vector_1+0x88>
	}
	else{
		ir.rx_started = 1;
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	80 93 c6 00 	sts	0x00C6, r24
		ir_start_timer();
     19c:	60 df       	rcall	.-320    	; 0x5e <ir_start_timer>
	}
	TCNT0 = TimerReloadValue;
     19e:	86 e9       	ldi	r24, 0x96	; 150
     1a0:	82 bf       	out	0x32, r24	; 50
}
     1a2:	ff 91       	pop	r31
     1a4:	ef 91       	pop	r30
     1a6:	bf 91       	pop	r27
     1a8:	af 91       	pop	r26
     1aa:	9f 91       	pop	r25
     1ac:	8f 91       	pop	r24
     1ae:	7f 91       	pop	r23
     1b0:	6f 91       	pop	r22
     1b2:	5f 91       	pop	r21
     1b4:	4f 91       	pop	r20
     1b6:	3f 91       	pop	r19
     1b8:	2f 91       	pop	r18
     1ba:	0f 90       	pop	r0
     1bc:	0f be       	out	0x3f, r0	; 63
     1be:	0f 90       	pop	r0
     1c0:	1f 90       	pop	r1
     1c2:	18 95       	reti

000001c4 <checkChanel>:
}


void checkChanel(const unsigned char index, const unsigned char mask, const unsigned int level)
{
	if(level == 0xFFFF){
     1c4:	9f ef       	ldi	r25, 0xFF	; 255
     1c6:	4f 3f       	cpi	r20, 0xFF	; 255
     1c8:	59 07       	cpc	r21, r25
     1ca:	f1 f1       	breq	.+124    	; 0x248 <checkChanel+0x84>
		return;
	}
	
	ADMUX = index;
     1cc:	87 b9       	out	0x07, r24	; 7
	ADCSR |= (1<<ADSC);
     1ce:	36 9a       	sbi	0x06, 6	; 6
	
	while(ADCSR & (1<<ADSC));
     1d0:	36 99       	sbic	0x06, 6	; 6
     1d2:	fe cf       	rjmp	.-4      	; 0x1d0 <checkChanel+0xc>
	
	uint16_t current = ADCW;
     1d4:	24 b1       	in	r18, 0x04	; 4
     1d6:	35 b1       	in	r19, 0x05	; 5
	
	if(current >= level){
     1d8:	24 17       	cp	r18, r20
     1da:	35 07       	cpc	r19, r21
     1dc:	20 f0       	brcs	.+8      	; 0x1e6 <checkChanel+0x22>
		PORTB |= (mask);
     1de:	98 b3       	in	r25, 0x18	; 24
     1e0:	69 2b       	or	r22, r25
     1e2:	68 bb       	out	0x18, r22	; 24
     1e4:	04 c0       	rjmp	.+8      	; 0x1ee <checkChanel+0x2a>
	} else {
		PORTB &= ~(mask);
     1e6:	98 b3       	in	r25, 0x18	; 24
     1e8:	60 95       	com	r22
     1ea:	69 23       	and	r22, r25
     1ec:	68 bb       	out	0x18, r22	; 24
	}
	
	switch(index){
     1ee:	82 30       	cpi	r24, 0x02	; 2
     1f0:	c1 f0       	breq	.+48     	; 0x222 <checkChanel+0x5e>
     1f2:	83 30       	cpi	r24, 0x03	; 3
     1f4:	28 f4       	brcc	.+10     	; 0x200 <checkChanel+0x3c>
     1f6:	88 23       	and	r24, r24
     1f8:	51 f0       	breq	.+20     	; 0x20e <checkChanel+0x4a>
     1fa:	81 30       	cpi	r24, 0x01	; 1
     1fc:	29 f5       	brne	.+74     	; 0x248 <checkChanel+0x84>
     1fe:	0c c0       	rjmp	.+24     	; 0x218 <checkChanel+0x54>
     200:	84 30       	cpi	r24, 0x04	; 4
     202:	c9 f0       	breq	.+50     	; 0x236 <checkChanel+0x72>
     204:	84 30       	cpi	r24, 0x04	; 4
     206:	90 f0       	brcs	.+36     	; 0x22c <checkChanel+0x68>
     208:	85 30       	cpi	r24, 0x05	; 5
     20a:	f1 f4       	brne	.+60     	; 0x248 <checkChanel+0x84>
     20c:	19 c0       	rjmp	.+50     	; 0x240 <checkChanel+0x7c>
		case ADC1: v1 = current; break;
     20e:	30 93 b7 00 	sts	0x00B7, r19
     212:	20 93 b6 00 	sts	0x00B6, r18
     216:	08 95       	ret
		case ADC2: v2 = current; break;
     218:	30 93 b5 00 	sts	0x00B5, r19
     21c:	20 93 b4 00 	sts	0x00B4, r18
     220:	08 95       	ret
		case ADC3: v3 = current; break;
     222:	30 93 b3 00 	sts	0x00B3, r19
     226:	20 93 b2 00 	sts	0x00B2, r18
     22a:	08 95       	ret
		case ADC4: v4 = current; break;
     22c:	30 93 b1 00 	sts	0x00B1, r19
     230:	20 93 b0 00 	sts	0x00B0, r18
     234:	08 95       	ret
		case ADC5: v5 = current; break;
     236:	30 93 af 00 	sts	0x00AF, r19
     23a:	20 93 ae 00 	sts	0x00AE, r18
     23e:	08 95       	ret
		case ADC6: v6 = current; break;
     240:	30 93 ad 00 	sts	0x00AD, r19
     244:	20 93 ac 00 	sts	0x00AC, r18
     248:	08 95       	ret

0000024a <printValue>:
	}
}

void printValue(const uint16_t v)
{
     24a:	cf 93       	push	r28
	uint8_t l = 5 - sprintf(str, "%u", v);
     24c:	00 d0       	rcall	.+0      	; 0x24e <printValue+0x4>
     24e:	00 d0       	rcall	.+0      	; 0x250 <printValue+0x6>
     250:	00 d0       	rcall	.+0      	; 0x252 <printValue+0x8>
     252:	ed b7       	in	r30, 0x3d	; 61
     254:	fe b7       	in	r31, 0x3e	; 62
     256:	31 96       	adiw	r30, 0x01	; 1
     258:	2f ec       	ldi	r18, 0xCF	; 207
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	ad b7       	in	r26, 0x3d	; 61
     25e:	be b7       	in	r27, 0x3e	; 62
     260:	12 96       	adiw	r26, 0x02	; 2
     262:	3c 93       	st	X, r19
     264:	2e 93       	st	-X, r18
     266:	11 97       	sbiw	r26, 0x01	; 1
     268:	20 e6       	ldi	r18, 0x60	; 96
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	33 83       	std	Z+3, r19	; 0x03
     26e:	22 83       	std	Z+2, r18	; 0x02
     270:	95 83       	std	Z+5, r25	; 0x05
     272:	84 83       	std	Z+4, r24	; 0x04
     274:	47 d5       	rcall	.+2702   	; 0xd04 <sprintf>
	while(l--) RS_putc(' ');
     276:	2d b7       	in	r18, 0x3d	; 61
     278:	3e b7       	in	r19, 0x3e	; 62
     27a:	2a 5f       	subi	r18, 0xFA	; 250
     27c:	3f 4f       	sbci	r19, 0xFF	; 255
     27e:	0f b6       	in	r0, 0x3f	; 63
     280:	f8 94       	cli
     282:	3e bf       	out	0x3e, r19	; 62
     284:	0f be       	out	0x3f, r0	; 63
     286:	2d bf       	out	0x3d, r18	; 61
     288:	85 30       	cpi	r24, 0x05	; 5
     28a:	51 f0       	breq	.+20     	; 0x2a0 <printValue+0x56>
     28c:	c4 e0       	ldi	r28, 0x04	; 4
     28e:	c8 1b       	sub	r28, r24
     290:	01 c0       	rjmp	.+2      	; 0x294 <printValue+0x4a>
     292:	c8 2f       	mov	r28, r24
     294:	80 e2       	ldi	r24, 0x20	; 32
     296:	ea de       	rcall	.-556    	; 0x6c <RS_putc>
     298:	8c 2f       	mov	r24, r28
     29a:	81 50       	subi	r24, 0x01	; 1
     29c:	cc 23       	and	r28, r28
     29e:	c9 f7       	brne	.-14     	; 0x292 <printValue+0x48>
	RS_puts(str);
     2a0:	8f ec       	ldi	r24, 0xCF	; 207
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	e7 de       	rcall	.-562    	; 0x74 <RS_puts>
	RS_puts("  ");
     2a6:	83 e6       	ldi	r24, 0x63	; 99
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	e4 de       	rcall	.-568    	; 0x74 <RS_puts>
}
     2ac:	cf 91       	pop	r28
     2ae:	08 95       	ret

000002b0 <reDraw>:

void reDraw(void)
{
     2b0:	4f 92       	push	r4
     2b2:	5f 92       	push	r5
     2b4:	6f 92       	push	r6
     2b6:	7f 92       	push	r7
     2b8:	8f 92       	push	r8
     2ba:	9f 92       	push	r9
     2bc:	af 92       	push	r10
     2be:	bf 92       	push	r11
     2c0:	cf 92       	push	r12
     2c2:	df 92       	push	r13
     2c4:	ef 92       	push	r14
     2c6:	ff 92       	push	r15
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	00 d0       	rcall	.+0      	; 0x2d2 <reDraw+0x22>
     2d2:	00 d0       	rcall	.+0      	; 0x2d4 <reDraw+0x24>
     2d4:	00 d0       	rcall	.+0      	; 0x2d6 <reDraw+0x26>
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62
	static uint8_t inProcess = 0;
	
	if(inProcess) return;
     2da:	80 91 c5 00 	lds	r24, 0x00C5
     2de:	88 23       	and	r24, r24
     2e0:	09 f0       	breq	.+2      	; 0x2e4 <reDraw+0x34>
     2e2:	96 c1       	rjmp	.+812    	; 0x610 <__stack+0x1b1>
	
	inProcess = 1;
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	80 93 c5 00 	sts	0x00C5, r24
	
	RS_putc(0x0C);
     2ea:	8c e0       	ldi	r24, 0x0C	; 12
     2ec:	bf de       	rcall	.-642    	; 0x6c <RS_putc>
	RS_puts("---------------------------------------------\r\n");
     2ee:	86 e6       	ldi	r24, 0x66	; 102
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	c0 de       	rcall	.-640    	; 0x74 <RS_puts>
	
	RS_puts("| ");
     2f4:	86 e9       	ldi	r24, 0x96	; 150
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	bd de       	rcall	.-646    	; 0x74 <RS_puts>
     2fa:	01 e0       	ldi	r16, 0x01	; 1
     2fc:	10 e0       	ldi	r17, 0x00	; 0
	for(uint8_t i = 0; i < 6; i++){
		RS_puts("   ");
     2fe:	0f 2e       	mov	r0, r31
     300:	f9 e9       	ldi	r31, 0x99	; 153
     302:	af 2e       	mov	r10, r31
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	bf 2e       	mov	r11, r31
     308:	f0 2d       	mov	r31, r0
		RS_putc(selected == i ? '*' : ' ');
		sprintf(str, "%u  ", i+1);
     30a:	0f 2e       	mov	r0, r31
     30c:	ff ec       	ldi	r31, 0xCF	; 207
     30e:	cf 2e       	mov	r12, r31
     310:	f0 e0       	ldi	r31, 0x00	; 0
     312:	df 2e       	mov	r13, r31
     314:	f0 2d       	mov	r31, r0
     316:	0f 2e       	mov	r0, r31
     318:	fd e9       	ldi	r31, 0x9D	; 157
     31a:	8f 2e       	mov	r8, r31
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	9f 2e       	mov	r9, r31
     320:	f0 2d       	mov	r31, r0
	RS_putc(0x0C);
	RS_puts("---------------------------------------------\r\n");
	
	RS_puts("| ");
	for(uint8_t i = 0; i < 6; i++){
		RS_puts("   ");
     322:	c5 01       	movw	r24, r10
     324:	a7 de       	rcall	.-690    	; 0x74 <RS_puts>
	while(l--) RS_putc(' ');
	RS_puts(str);
	RS_puts("  ");
}

void reDraw(void)
     326:	80 2f       	mov	r24, r16
     328:	81 50       	subi	r24, 0x01	; 1
	RS_puts("---------------------------------------------\r\n");
	
	RS_puts("| ");
	for(uint8_t i = 0; i < 6; i++){
		RS_puts("   ");
		RS_putc(selected == i ? '*' : ' ');
     32a:	90 91 c4 00 	lds	r25, 0x00C4
     32e:	98 17       	cp	r25, r24
     330:	11 f4       	brne	.+4      	; 0x336 <reDraw+0x86>
     332:	8a e2       	ldi	r24, 0x2A	; 42
     334:	01 c0       	rjmp	.+2      	; 0x338 <reDraw+0x88>
     336:	80 e2       	ldi	r24, 0x20	; 32
     338:	99 de       	rcall	.-718    	; 0x6c <RS_putc>
		sprintf(str, "%u  ", i+1);
     33a:	00 d0       	rcall	.+0      	; 0x33c <reDraw+0x8c>
     33c:	00 d0       	rcall	.+0      	; 0x33e <reDraw+0x8e>
     33e:	00 d0       	rcall	.+0      	; 0x340 <reDraw+0x90>
     340:	ed b7       	in	r30, 0x3d	; 61
     342:	fe b7       	in	r31, 0x3e	; 62
     344:	31 96       	adiw	r30, 0x01	; 1
     346:	ad b7       	in	r26, 0x3d	; 61
     348:	be b7       	in	r27, 0x3e	; 62
     34a:	12 96       	adiw	r26, 0x02	; 2
     34c:	dc 92       	st	X, r13
     34e:	ce 92       	st	-X, r12
     350:	11 97       	sbiw	r26, 0x01	; 1
     352:	93 82       	std	Z+3, r9	; 0x03
     354:	82 82       	std	Z+2, r8	; 0x02
     356:	15 83       	std	Z+5, r17	; 0x05
     358:	04 83       	std	Z+4, r16	; 0x04
     35a:	d4 d4       	rcall	.+2472   	; 0xd04 <sprintf>
		RS_puts(str);
     35c:	ed b7       	in	r30, 0x3d	; 61
     35e:	fe b7       	in	r31, 0x3e	; 62
     360:	36 96       	adiw	r30, 0x06	; 6
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	f8 94       	cli
     366:	fe bf       	out	0x3e, r31	; 62
     368:	0f be       	out	0x3f, r0	; 63
     36a:	ed bf       	out	0x3d, r30	; 61
     36c:	c6 01       	movw	r24, r12
     36e:	82 de       	rcall	.-764    	; 0x74 <RS_puts>
     370:	0f 5f       	subi	r16, 0xFF	; 255
     372:	1f 4f       	sbci	r17, 0xFF	; 255
	
	RS_putc(0x0C);
	RS_puts("---------------------------------------------\r\n");
	
	RS_puts("| ");
	for(uint8_t i = 0; i < 6; i++){
     374:	07 30       	cpi	r16, 0x07	; 7
     376:	11 05       	cpc	r17, r1
     378:	a1 f6       	brne	.-88     	; 0x322 <reDraw+0x72>
		RS_putc(selected == i ? '*' : ' ');
		sprintf(str, "%u  ", i+1);
		RS_puts(str);
	}
	
	RS_puts("|\r\n");
     37a:	82 ea       	ldi	r24, 0xA2	; 162
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	7a de       	rcall	.-780    	; 0x74 <RS_puts>
	
	RS_puts("---------------------------------------------\r\n");
     380:	86 e6       	ldi	r24, 0x66	; 102
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	77 de       	rcall	.-786    	; 0x74 <RS_puts>
	
	uint8_t values[6] = {
		GET_COLUMN(c1),
     386:	60 91 c2 00 	lds	r22, 0x00C2
     38a:	70 91 c3 00 	lds	r23, 0x00C3
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0f 2e       	mov	r0, r31
     394:	f4 e6       	ldi	r31, 0x64	; 100
     396:	8f 2e       	mov	r8, r31
     398:	f0 e0       	ldi	r31, 0x00	; 0
     39a:	9f 2e       	mov	r9, r31
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	af 2e       	mov	r10, r31
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	bf 2e       	mov	r11, r31
     3a4:	f0 2d       	mov	r31, r0
     3a6:	24 e6       	ldi	r18, 0x64	; 100
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	50 e0       	ldi	r21, 0x00	; 0
     3ae:	69 d4       	rcall	.+2258   	; 0xc82 <__mulsi3>
     3b0:	0f 2e       	mov	r0, r31
     3b2:	ff ef       	ldi	r31, 0xFF	; 255
     3b4:	cf 2e       	mov	r12, r31
     3b6:	f3 e0       	ldi	r31, 0x03	; 3
     3b8:	df 2e       	mov	r13, r31
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	ef 2e       	mov	r14, r31
     3be:	f0 e0       	ldi	r31, 0x00	; 0
     3c0:	ff 2e       	mov	r15, r31
     3c2:	f0 2d       	mov	r31, r0
     3c4:	a7 01       	movw	r20, r14
     3c6:	96 01       	movw	r18, r12
     3c8:	7b d4       	rcall	.+2294   	; 0xcc0 <__udivmodsi4>
     3ca:	ca 01       	movw	r24, r20
     3cc:	b9 01       	movw	r22, r18
     3ce:	2a e0       	ldi	r18, 0x0A	; 10
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	40 e0       	ldi	r20, 0x00	; 0
     3d4:	50 e0       	ldi	r21, 0x00	; 0
     3d6:	55 d4       	rcall	.+2218   	; 0xc82 <__mulsi3>
     3d8:	a5 01       	movw	r20, r10
     3da:	94 01       	movw	r18, r8
     3dc:	71 d4       	rcall	.+2274   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     3de:	29 83       	std	Y+1, r18	; 0x01
		GET_COLUMN(c1),
		GET_COLUMN(c2),
     3e0:	80 91 c0 00 	lds	r24, 0x00C0
     3e4:	90 91 c1 00 	lds	r25, 0x00C1
     3e8:	bc 01       	movw	r22, r24
     3ea:	80 e0       	ldi	r24, 0x00	; 0
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	24 e6       	ldi	r18, 0x64	; 100
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	45 d4       	rcall	.+2186   	; 0xc82 <__mulsi3>
     3f8:	a7 01       	movw	r20, r14
     3fa:	96 01       	movw	r18, r12
     3fc:	61 d4       	rcall	.+2242   	; 0xcc0 <__udivmodsi4>
     3fe:	ca 01       	movw	r24, r20
     400:	b9 01       	movw	r22, r18
     402:	2a e0       	ldi	r18, 0x0A	; 10
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	40 e0       	ldi	r20, 0x00	; 0
     408:	50 e0       	ldi	r21, 0x00	; 0
     40a:	3b d4       	rcall	.+2166   	; 0xc82 <__mulsi3>
     40c:	a5 01       	movw	r20, r10
     40e:	94 01       	movw	r18, r8
     410:	57 d4       	rcall	.+2222   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     412:	2a 83       	std	Y+2, r18	; 0x02
		GET_COLUMN(c1),
		GET_COLUMN(c2),
		GET_COLUMN(c3),
     414:	80 91 be 00 	lds	r24, 0x00BE
     418:	90 91 bf 00 	lds	r25, 0x00BF
     41c:	bc 01       	movw	r22, r24
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	24 e6       	ldi	r18, 0x64	; 100
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	40 e0       	ldi	r20, 0x00	; 0
     428:	50 e0       	ldi	r21, 0x00	; 0
     42a:	2b d4       	rcall	.+2134   	; 0xc82 <__mulsi3>
     42c:	a7 01       	movw	r20, r14
     42e:	96 01       	movw	r18, r12
     430:	47 d4       	rcall	.+2190   	; 0xcc0 <__udivmodsi4>
     432:	ca 01       	movw	r24, r20
     434:	b9 01       	movw	r22, r18
     436:	2a e0       	ldi	r18, 0x0A	; 10
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	40 e0       	ldi	r20, 0x00	; 0
     43c:	50 e0       	ldi	r21, 0x00	; 0
     43e:	21 d4       	rcall	.+2114   	; 0xc82 <__mulsi3>
     440:	a5 01       	movw	r20, r10
     442:	94 01       	movw	r18, r8
     444:	3d d4       	rcall	.+2170   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     446:	2b 83       	std	Y+3, r18	; 0x03
		GET_COLUMN(c1),
		GET_COLUMN(c2),
		GET_COLUMN(c3),
		GET_COLUMN(c4),
     448:	80 91 bc 00 	lds	r24, 0x00BC
     44c:	90 91 bd 00 	lds	r25, 0x00BD
     450:	bc 01       	movw	r22, r24
     452:	80 e0       	ldi	r24, 0x00	; 0
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	24 e6       	ldi	r18, 0x64	; 100
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	40 e0       	ldi	r20, 0x00	; 0
     45c:	50 e0       	ldi	r21, 0x00	; 0
     45e:	11 d4       	rcall	.+2082   	; 0xc82 <__mulsi3>
     460:	a7 01       	movw	r20, r14
     462:	96 01       	movw	r18, r12
     464:	2d d4       	rcall	.+2138   	; 0xcc0 <__udivmodsi4>
     466:	ca 01       	movw	r24, r20
     468:	b9 01       	movw	r22, r18
     46a:	2a e0       	ldi	r18, 0x0A	; 10
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	40 e0       	ldi	r20, 0x00	; 0
     470:	50 e0       	ldi	r21, 0x00	; 0
     472:	07 d4       	rcall	.+2062   	; 0xc82 <__mulsi3>
     474:	a5 01       	movw	r20, r10
     476:	94 01       	movw	r18, r8
     478:	23 d4       	rcall	.+2118   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     47a:	2c 83       	std	Y+4, r18	; 0x04
		GET_COLUMN(c1),
		GET_COLUMN(c2),
		GET_COLUMN(c3),
		GET_COLUMN(c4),
		GET_COLUMN(c5),
     47c:	80 91 ba 00 	lds	r24, 0x00BA
     480:	90 91 bb 00 	lds	r25, 0x00BB
     484:	bc 01       	movw	r22, r24
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	24 e6       	ldi	r18, 0x64	; 100
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	50 e0       	ldi	r21, 0x00	; 0
     492:	f7 d3       	rcall	.+2030   	; 0xc82 <__mulsi3>
     494:	a7 01       	movw	r20, r14
     496:	96 01       	movw	r18, r12
     498:	13 d4       	rcall	.+2086   	; 0xcc0 <__udivmodsi4>
     49a:	ca 01       	movw	r24, r20
     49c:	b9 01       	movw	r22, r18
     49e:	2a e0       	ldi	r18, 0x0A	; 10
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	ed d3       	rcall	.+2010   	; 0xc82 <__mulsi3>
     4a8:	a5 01       	movw	r20, r10
     4aa:	94 01       	movw	r18, r8
     4ac:	09 d4       	rcall	.+2066   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     4ae:	2d 83       	std	Y+5, r18	; 0x05
		GET_COLUMN(c1),
		GET_COLUMN(c2),
		GET_COLUMN(c3),
		GET_COLUMN(c4),
		GET_COLUMN(c5),
		GET_COLUMN(c6)
     4b0:	80 91 b8 00 	lds	r24, 0x00B8
     4b4:	90 91 b9 00 	lds	r25, 0x00B9
     4b8:	bc 01       	movw	r22, r24
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	24 e6       	ldi	r18, 0x64	; 100
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	40 e0       	ldi	r20, 0x00	; 0
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	dd d3       	rcall	.+1978   	; 0xc82 <__mulsi3>
     4c8:	a7 01       	movw	r20, r14
     4ca:	96 01       	movw	r18, r12
     4cc:	f9 d3       	rcall	.+2034   	; 0xcc0 <__udivmodsi4>
     4ce:	ca 01       	movw	r24, r20
     4d0:	b9 01       	movw	r22, r18
     4d2:	2a e0       	ldi	r18, 0x0A	; 10
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	40 e0       	ldi	r20, 0x00	; 0
     4d8:	50 e0       	ldi	r21, 0x00	; 0
     4da:	d3 d3       	rcall	.+1958   	; 0xc82 <__mulsi3>
     4dc:	a5 01       	movw	r20, r10
     4de:	94 01       	movw	r18, r8
     4e0:	ef d3       	rcall	.+2014   	; 0xcc0 <__udivmodsi4>
	
	RS_puts("|\r\n");
	
	RS_puts("---------------------------------------------\r\n");
	
	uint8_t values[6] = {
     4e2:	2e 83       	std	Y+6, r18	; 0x06
     4e4:	0f 2e       	mov	r0, r31
     4e6:	fa e0       	ldi	r31, 0x0A	; 10
     4e8:	ff 2e       	mov	r15, r31
     4ea:	f0 2d       	mov	r31, r0
		GET_COLUMN(c5),
		GET_COLUMN(c6)
	};
	
	for(uint8_t l = 10; l > 0; l--){
		RS_puts("| ");
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f6 e9       	ldi	r31, 0x96	; 150
     4f0:	6f 2e       	mov	r6, r31
     4f2:	f0 e0       	ldi	r31, 0x00	; 0
     4f4:	7f 2e       	mov	r7, r31
     4f6:	f0 2d       	mov	r31, r0
	while(l--) RS_putc(' ');
	RS_puts(str);
	RS_puts("  ");
}

void reDraw(void)
     4f8:	0f 2e       	mov	r0, r31
     4fa:	f7 e0       	ldi	r31, 0x07	; 7
     4fc:	cf 2e       	mov	r12, r31
     4fe:	dd 24       	eor	r13, r13
     500:	f0 2d       	mov	r31, r0
     502:	cc 0e       	add	r12, r28
     504:	dd 1e       	adc	r13, r29
	
	for(uint8_t l = 10; l > 0; l--){
		RS_puts("| ");
		
		for(uint8_t i = 0; i < 6; i++){
			RS_puts("    ");
     506:	0f 2e       	mov	r0, r31
     508:	f6 ea       	ldi	r31, 0xA6	; 166
     50a:	af 2e       	mov	r10, r31
     50c:	f0 e0       	ldi	r31, 0x00	; 0
     50e:	bf 2e       	mov	r11, r31
     510:	f0 2d       	mov	r31, r0
			//sprintf(str, "%u", values[i]);
			//RS_puts(str);
			RS_putc(values[i] >= l ? '#' : ' ');
			RS_puts("  ");
     512:	0f 2e       	mov	r0, r31
     514:	f3 e6       	ldi	r31, 0x63	; 99
     516:	8f 2e       	mov	r8, r31
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	9f 2e       	mov	r9, r31
     51c:	f0 2d       	mov	r31, r0
		}
		
		RS_puts("|\r\n");
     51e:	0f 2e       	mov	r0, r31
     520:	f2 ea       	ldi	r31, 0xA2	; 162
     522:	4f 2e       	mov	r4, r31
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	5f 2e       	mov	r5, r31
     528:	f0 2d       	mov	r31, r0
		GET_COLUMN(c5),
		GET_COLUMN(c6)
	};
	
	for(uint8_t l = 10; l > 0; l--){
		RS_puts("| ");
     52a:	c3 01       	movw	r24, r6
     52c:	a3 dd       	rcall	.-1210   	; 0x74 <RS_puts>
     52e:	8e 01       	movw	r16, r28
     530:	0f 5f       	subi	r16, 0xFF	; 255
     532:	1f 4f       	sbci	r17, 0xFF	; 255
		
		for(uint8_t i = 0; i < 6; i++){
			RS_puts("    ");
     534:	c5 01       	movw	r24, r10
     536:	9e dd       	rcall	.-1220   	; 0x74 <RS_puts>
			//sprintf(str, "%u", values[i]);
			//RS_puts(str);
			RS_putc(values[i] >= l ? '#' : ' ');
     538:	d8 01       	movw	r26, r16
     53a:	8d 91       	ld	r24, X+
     53c:	8d 01       	movw	r16, r26
     53e:	8f 15       	cp	r24, r15
     540:	10 f0       	brcs	.+4      	; 0x546 <__stack+0xe7>
     542:	83 e2       	ldi	r24, 0x23	; 35
     544:	01 c0       	rjmp	.+2      	; 0x548 <__stack+0xe9>
     546:	80 e2       	ldi	r24, 0x20	; 32
     548:	91 dd       	rcall	.-1246   	; 0x6c <RS_putc>
			RS_puts("  ");
     54a:	c4 01       	movw	r24, r8
     54c:	93 dd       	rcall	.-1242   	; 0x74 <RS_puts>
	};
	
	for(uint8_t l = 10; l > 0; l--){
		RS_puts("| ");
		
		for(uint8_t i = 0; i < 6; i++){
     54e:	0c 15       	cp	r16, r12
     550:	1d 05       	cpc	r17, r13
     552:	81 f7       	brne	.-32     	; 0x534 <__stack+0xd5>
			//RS_puts(str);
			RS_putc(values[i] >= l ? '#' : ' ');
			RS_puts("  ");
		}
		
		RS_puts("|\r\n");
     554:	c2 01       	movw	r24, r4
     556:	8e dd       	rcall	.-1252   	; 0x74 <RS_puts>
     558:	fa 94       	dec	r15
		GET_COLUMN(c4),
		GET_COLUMN(c5),
		GET_COLUMN(c6)
	};
	
	for(uint8_t l = 10; l > 0; l--){
     55a:	39 f7       	brne	.-50     	; 0x52a <__stack+0xcb>
		}
		
		RS_puts("|\r\n");
	}
	
	RS_puts("---------------------------------------------\r\n");
     55c:	0f 2e       	mov	r0, r31
     55e:	f6 e6       	ldi	r31, 0x66	; 102
     560:	cf 2e       	mov	r12, r31
     562:	f0 e0       	ldi	r31, 0x00	; 0
     564:	df 2e       	mov	r13, r31
     566:	f0 2d       	mov	r31, r0
     568:	c6 01       	movw	r24, r12
     56a:	84 dd       	rcall	.-1272   	; 0x74 <RS_puts>
	
	RS_puts("| ");
     56c:	06 e9       	ldi	r16, 0x96	; 150
     56e:	10 e0       	ldi	r17, 0x00	; 0
     570:	c8 01       	movw	r24, r16
     572:	80 dd       	rcall	.-1280   	; 0x74 <RS_puts>
	printValue(c1);
     574:	80 91 c2 00 	lds	r24, 0x00C2
     578:	90 91 c3 00 	lds	r25, 0x00C3
     57c:	66 de       	rcall	.-820    	; 0x24a <printValue>
	printValue(c2);
     57e:	80 91 c0 00 	lds	r24, 0x00C0
     582:	90 91 c1 00 	lds	r25, 0x00C1
     586:	61 de       	rcall	.-830    	; 0x24a <printValue>
	printValue(c3);
     588:	80 91 be 00 	lds	r24, 0x00BE
     58c:	90 91 bf 00 	lds	r25, 0x00BF
     590:	5c de       	rcall	.-840    	; 0x24a <printValue>
	printValue(c4);
     592:	80 91 bc 00 	lds	r24, 0x00BC
     596:	90 91 bd 00 	lds	r25, 0x00BD
     59a:	57 de       	rcall	.-850    	; 0x24a <printValue>
	printValue(c5);
     59c:	80 91 ba 00 	lds	r24, 0x00BA
     5a0:	90 91 bb 00 	lds	r25, 0x00BB
     5a4:	52 de       	rcall	.-860    	; 0x24a <printValue>
	printValue(c6);
     5a6:	80 91 b8 00 	lds	r24, 0x00B8
     5aa:	90 91 b9 00 	lds	r25, 0x00B9
     5ae:	4d de       	rcall	.-870    	; 0x24a <printValue>
	RS_puts("|\r\n");
     5b0:	0f 2e       	mov	r0, r31
     5b2:	f2 ea       	ldi	r31, 0xA2	; 162
     5b4:	af 2e       	mov	r10, r31
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	bf 2e       	mov	r11, r31
     5ba:	f0 2d       	mov	r31, r0
     5bc:	c5 01       	movw	r24, r10
     5be:	5a dd       	rcall	.-1356   	; 0x74 <RS_puts>
	
	RS_puts("---------------------------------------------\r\n");
     5c0:	c6 01       	movw	r24, r12
     5c2:	58 dd       	rcall	.-1360   	; 0x74 <RS_puts>
	
	RS_puts("| ");
     5c4:	c8 01       	movw	r24, r16
     5c6:	56 dd       	rcall	.-1364   	; 0x74 <RS_puts>
	printValue(v1);
     5c8:	80 91 b6 00 	lds	r24, 0x00B6
     5cc:	90 91 b7 00 	lds	r25, 0x00B7
     5d0:	3c de       	rcall	.-904    	; 0x24a <printValue>
	printValue(v2);
     5d2:	80 91 b4 00 	lds	r24, 0x00B4
     5d6:	90 91 b5 00 	lds	r25, 0x00B5
     5da:	37 de       	rcall	.-914    	; 0x24a <printValue>
	printValue(v3);
     5dc:	80 91 b2 00 	lds	r24, 0x00B2
     5e0:	90 91 b3 00 	lds	r25, 0x00B3
     5e4:	32 de       	rcall	.-924    	; 0x24a <printValue>
	printValue(v4);
     5e6:	80 91 b0 00 	lds	r24, 0x00B0
     5ea:	90 91 b1 00 	lds	r25, 0x00B1
     5ee:	2d de       	rcall	.-934    	; 0x24a <printValue>
	printValue(v5);
     5f0:	80 91 ae 00 	lds	r24, 0x00AE
     5f4:	90 91 af 00 	lds	r25, 0x00AF
     5f8:	28 de       	rcall	.-944    	; 0x24a <printValue>
	printValue(v6);
     5fa:	80 91 ac 00 	lds	r24, 0x00AC
     5fe:	90 91 ad 00 	lds	r25, 0x00AD
     602:	23 de       	rcall	.-954    	; 0x24a <printValue>
	RS_puts("|\r\n");
     604:	c5 01       	movw	r24, r10
     606:	36 dd       	rcall	.-1428   	; 0x74 <RS_puts>
	
	RS_puts("---------------------------------------------\r\n");
     608:	c6 01       	movw	r24, r12
     60a:	34 dd       	rcall	.-1432   	; 0x74 <RS_puts>
	
	inProcess = 0;
     60c:	10 92 c5 00 	sts	0x00C5, r1
}
     610:	26 96       	adiw	r28, 0x06	; 6
     612:	0f b6       	in	r0, 0x3f	; 63
     614:	f8 94       	cli
     616:	de bf       	out	0x3e, r29	; 62
     618:	0f be       	out	0x3f, r0	; 63
     61a:	cd bf       	out	0x3d, r28	; 61
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	1f 91       	pop	r17
     622:	0f 91       	pop	r16
     624:	ff 90       	pop	r15
     626:	ef 90       	pop	r14
     628:	df 90       	pop	r13
     62a:	cf 90       	pop	r12
     62c:	bf 90       	pop	r11
     62e:	af 90       	pop	r10
     630:	9f 90       	pop	r9
     632:	8f 90       	pop	r8
     634:	7f 90       	pop	r7
     636:	6f 90       	pop	r6
     638:	5f 90       	pop	r5
     63a:	4f 90       	pop	r4
     63c:	08 95       	ret

0000063e <__vector_8>:
	
}
*/

ISR(TIMER1_OVF_vect)
{
     63e:	1f 92       	push	r1
     640:	0f 92       	push	r0
     642:	0f b6       	in	r0, 0x3f	; 63
     644:	0f 92       	push	r0
     646:	11 24       	eor	r1, r1
     648:	2f 93       	push	r18
     64a:	3f 93       	push	r19
     64c:	4f 93       	push	r20
     64e:	5f 93       	push	r21
     650:	6f 93       	push	r22
     652:	7f 93       	push	r23
     654:	8f 93       	push	r24
     656:	9f 93       	push	r25
     658:	af 93       	push	r26
     65a:	bf 93       	push	r27
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
	PORTD |= (1<<4);
     660:	94 9a       	sbi	0x12, 4	; 18
	asm("nop");
     662:	00 00       	nop
	checkChanel(0, BIT_1, c1);
     664:	40 91 c2 00 	lds	r20, 0x00C2
     668:	50 91 c3 00 	lds	r21, 0x00C3
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	61 e0       	ldi	r22, 0x01	; 1
     670:	a9 dd       	rcall	.-1198   	; 0x1c4 <checkChanel>
	checkChanel(1, BIT_2, c2);
     672:	40 91 c0 00 	lds	r20, 0x00C0
     676:	50 91 c1 00 	lds	r21, 0x00C1
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	62 e0       	ldi	r22, 0x02	; 2
     67e:	a2 dd       	rcall	.-1212   	; 0x1c4 <checkChanel>
	checkChanel(2, BIT_3, c3);
     680:	40 91 be 00 	lds	r20, 0x00BE
     684:	50 91 bf 00 	lds	r21, 0x00BF
     688:	82 e0       	ldi	r24, 0x02	; 2
     68a:	64 e0       	ldi	r22, 0x04	; 4
     68c:	9b dd       	rcall	.-1226   	; 0x1c4 <checkChanel>
	checkChanel(3, BIT_4, c4);
     68e:	40 91 bc 00 	lds	r20, 0x00BC
     692:	50 91 bd 00 	lds	r21, 0x00BD
     696:	83 e0       	ldi	r24, 0x03	; 3
     698:	68 e0       	ldi	r22, 0x08	; 8
     69a:	94 dd       	rcall	.-1240   	; 0x1c4 <checkChanel>
	checkChanel(4, BIT_5, c5);
     69c:	40 91 ba 00 	lds	r20, 0x00BA
     6a0:	50 91 bb 00 	lds	r21, 0x00BB
     6a4:	84 e0       	ldi	r24, 0x04	; 4
     6a6:	60 e1       	ldi	r22, 0x10	; 16
     6a8:	8d dd       	rcall	.-1254   	; 0x1c4 <checkChanel>
	checkChanel(5, BIT_6, c6);
     6aa:	40 91 b8 00 	lds	r20, 0x00B8
     6ae:	50 91 b9 00 	lds	r21, 0x00B9
     6b2:	85 e0       	ldi	r24, 0x05	; 5
     6b4:	60 e2       	ldi	r22, 0x20	; 32
     6b6:	86 dd       	rcall	.-1268   	; 0x1c4 <checkChanel>
	PORTD &= ~(1<<4);
     6b8:	94 98       	cbi	0x12, 4	; 18
	
	reDraw();
     6ba:	fa dd       	rcall	.-1036   	; 0x2b0 <reDraw>
}
     6bc:	ff 91       	pop	r31
     6be:	ef 91       	pop	r30
     6c0:	bf 91       	pop	r27
     6c2:	af 91       	pop	r26
     6c4:	9f 91       	pop	r25
     6c6:	8f 91       	pop	r24
     6c8:	7f 91       	pop	r23
     6ca:	6f 91       	pop	r22
     6cc:	5f 91       	pop	r21
     6ce:	4f 91       	pop	r20
     6d0:	3f 91       	pop	r19
     6d2:	2f 91       	pop	r18
     6d4:	0f 90       	pop	r0
     6d6:	0f be       	out	0x3f, r0	; 63
     6d8:	0f 90       	pop	r0
     6da:	1f 90       	pop	r1
     6dc:	18 95       	reti

000006de <main>:
}

int main(void)
{
	
	PORTB = 0x00;
     6de:	18 ba       	out	0x18, r1	; 24
	PORTC = 0xFF;
     6e0:	8f ef       	ldi	r24, 0xFF	; 255
     6e2:	85 bb       	out	0x15, r24	; 21
	
	DDRC  = 0x00;
     6e4:	14 ba       	out	0x14, r1	; 20
	DDRB  = 0xFF;
     6e6:	87 bb       	out	0x17, r24	; 23
	DDRD |= (1<<4)|(0<<2);
     6e8:	8c 9a       	sbi	0x11, 4	; 17
	
	UBRRH = 0;
     6ea:	10 bc       	out	0x20, r1	; 32
	UBRRL = 51; //скорость обмена 9600 бод
     6ec:	83 e3       	ldi	r24, 0x33	; 51
     6ee:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1<<RXEN)|(1<<TXEN); //разр. прерыв при приеме и передачи, разр приема, разр передачи.
     6f0:	88 e1       	ldi	r24, 0x18	; 24
     6f2:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0); //размер слова 8 разрядов
     6f4:	86 e8       	ldi	r24, 0x86	; 134
     6f6:	80 bd       	out	0x20, r24	; 32
	
	TCCR1B  = (1<<CS02)|(0<<CS01)|(1<<CS00);
     6f8:	85 e0       	ldi	r24, 0x05	; 5
     6fa:	8e bd       	out	0x2e, r24	; 46
	TIMSK  |= (1<<TOIE1);
     6fc:	89 b7       	in	r24, 0x39	; 57
     6fe:	84 60       	ori	r24, 0x04	; 4
     700:	89 bf       	out	0x39, r24	; 57
	TCNT0 = TimerReloadValue;
}

static inline void ir_init()
{
	GIMSK |= _BV(INT0);
     702:	8b b7       	in	r24, 0x3b	; 59
     704:	80 64       	ori	r24, 0x40	; 64
     706:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1 << ISC00) | (0 <<ISC01);
     708:	85 b7       	in	r24, 0x35	; 53
     70a:	81 60       	ori	r24, 0x01	; 1
     70c:	85 bf       	out	0x35, r24	; 53
	ir_start_timer();
     70e:	a7 dc       	rcall	.-1714   	; 0x5e <ir_start_timer>
	TCCR1B  = (1<<CS02)|(0<<CS01)|(1<<CS00);
	TIMSK  |= (1<<TOIE1);
	
	ir_init();
	
	ACSR  = 0x80;
     710:	80 e8       	ldi	r24, 0x80	; 128
     712:	88 b9       	out	0x08, r24	; 8
	SFIOR = 0x00;
     714:	10 be       	out	0x30, r1	; 48

	ADCSR = 0x85;
     716:	85 e8       	ldi	r24, 0x85	; 133
     718:	86 b9       	out	0x06, r24	; 6
	
	c1 = (uint16_t) eeprom_read_word((uint16_t *)0x00);
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	e0 d4       	rcall	.+2496   	; 0x10e0 <__eerd_word_m8>
     720:	90 93 c3 00 	sts	0x00C3, r25
     724:	80 93 c2 00 	sts	0x00C2, r24
	c2 = (uint16_t) eeprom_read_word((uint16_t *)0x02);
     728:	82 e0       	ldi	r24, 0x02	; 2
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	d9 d4       	rcall	.+2482   	; 0x10e0 <__eerd_word_m8>
     72e:	90 93 c1 00 	sts	0x00C1, r25
     732:	80 93 c0 00 	sts	0x00C0, r24
	c3 = (uint16_t) eeprom_read_word((uint16_t *)0x04);
     736:	84 e0       	ldi	r24, 0x04	; 4
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	d2 d4       	rcall	.+2468   	; 0x10e0 <__eerd_word_m8>
     73c:	90 93 bf 00 	sts	0x00BF, r25
     740:	80 93 be 00 	sts	0x00BE, r24
	c4 = (uint16_t) eeprom_read_word((uint16_t *)0x06);
     744:	86 e0       	ldi	r24, 0x06	; 6
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	cb d4       	rcall	.+2454   	; 0x10e0 <__eerd_word_m8>
     74a:	90 93 bd 00 	sts	0x00BD, r25
     74e:	80 93 bc 00 	sts	0x00BC, r24
	c5 = (uint16_t) eeprom_read_word((uint16_t *)0x08);
     752:	88 e0       	ldi	r24, 0x08	; 8
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	c4 d4       	rcall	.+2440   	; 0x10e0 <__eerd_word_m8>
     758:	90 93 bb 00 	sts	0x00BB, r25
     75c:	80 93 ba 00 	sts	0x00BA, r24
	c6 = (uint16_t) eeprom_read_word((uint16_t *)0x0A);
     760:	8a e0       	ldi	r24, 0x0A	; 10
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	bd d4       	rcall	.+2426   	; 0x10e0 <__eerd_word_m8>
     766:	90 93 b9 00 	sts	0x00B9, r25
     76a:	80 93 b8 00 	sts	0x00B8, r24

	c1 = c1 > 1023 ? 0 : c1;
     76e:	80 91 c2 00 	lds	r24, 0x00C2
     772:	90 91 c3 00 	lds	r25, 0x00C3
     776:	24 e0       	ldi	r18, 0x04	; 4
     778:	80 30       	cpi	r24, 0x00	; 0
     77a:	92 07       	cpc	r25, r18
     77c:	28 f4       	brcc	.+10     	; 0x788 <main+0xaa>
     77e:	80 91 c2 00 	lds	r24, 0x00C2
     782:	90 91 c3 00 	lds	r25, 0x00C3
     786:	02 c0       	rjmp	.+4      	; 0x78c <main+0xae>
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	90 93 c3 00 	sts	0x00C3, r25
     790:	80 93 c2 00 	sts	0x00C2, r24
	c2 = c2 > 1023 ? 0 : c2;
     794:	80 91 c0 00 	lds	r24, 0x00C0
     798:	90 91 c1 00 	lds	r25, 0x00C1
     79c:	24 e0       	ldi	r18, 0x04	; 4
     79e:	80 30       	cpi	r24, 0x00	; 0
     7a0:	92 07       	cpc	r25, r18
     7a2:	28 f4       	brcc	.+10     	; 0x7ae <main+0xd0>
     7a4:	80 91 c0 00 	lds	r24, 0x00C0
     7a8:	90 91 c1 00 	lds	r25, 0x00C1
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <main+0xd4>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	90 93 c1 00 	sts	0x00C1, r25
     7b6:	80 93 c0 00 	sts	0x00C0, r24
	c3 = c3 > 1023 ? 0 : c3;
     7ba:	80 91 be 00 	lds	r24, 0x00BE
     7be:	90 91 bf 00 	lds	r25, 0x00BF
     7c2:	24 e0       	ldi	r18, 0x04	; 4
     7c4:	80 30       	cpi	r24, 0x00	; 0
     7c6:	92 07       	cpc	r25, r18
     7c8:	28 f4       	brcc	.+10     	; 0x7d4 <main+0xf6>
     7ca:	80 91 be 00 	lds	r24, 0x00BE
     7ce:	90 91 bf 00 	lds	r25, 0x00BF
     7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <main+0xfa>
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	90 93 bf 00 	sts	0x00BF, r25
     7dc:	80 93 be 00 	sts	0x00BE, r24
	c4 = c4 > 1023 ? 0 : c4;
     7e0:	80 91 bc 00 	lds	r24, 0x00BC
     7e4:	90 91 bd 00 	lds	r25, 0x00BD
     7e8:	24 e0       	ldi	r18, 0x04	; 4
     7ea:	80 30       	cpi	r24, 0x00	; 0
     7ec:	92 07       	cpc	r25, r18
     7ee:	28 f4       	brcc	.+10     	; 0x7fa <main+0x11c>
     7f0:	80 91 bc 00 	lds	r24, 0x00BC
     7f4:	90 91 bd 00 	lds	r25, 0x00BD
     7f8:	02 c0       	rjmp	.+4      	; 0x7fe <main+0x120>
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	90 93 bd 00 	sts	0x00BD, r25
     802:	80 93 bc 00 	sts	0x00BC, r24
	c5 = c5 > 1023 ? 0 : c5;
     806:	80 91 ba 00 	lds	r24, 0x00BA
     80a:	90 91 bb 00 	lds	r25, 0x00BB
     80e:	24 e0       	ldi	r18, 0x04	; 4
     810:	80 30       	cpi	r24, 0x00	; 0
     812:	92 07       	cpc	r25, r18
     814:	28 f4       	brcc	.+10     	; 0x820 <main+0x142>
     816:	80 91 ba 00 	lds	r24, 0x00BA
     81a:	90 91 bb 00 	lds	r25, 0x00BB
     81e:	02 c0       	rjmp	.+4      	; 0x824 <main+0x146>
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	90 93 bb 00 	sts	0x00BB, r25
     828:	80 93 ba 00 	sts	0x00BA, r24
	c6 = c6 > 1023 ? 0 : c6;
     82c:	80 91 b8 00 	lds	r24, 0x00B8
     830:	90 91 b9 00 	lds	r25, 0x00B9
     834:	24 e0       	ldi	r18, 0x04	; 4
     836:	80 30       	cpi	r24, 0x00	; 0
     838:	92 07       	cpc	r25, r18
     83a:	28 f4       	brcc	.+10     	; 0x846 <main+0x168>
     83c:	80 91 b8 00 	lds	r24, 0x00B8
     840:	90 91 b9 00 	lds	r25, 0x00B9
     844:	02 c0       	rjmp	.+4      	; 0x84a <main+0x16c>
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	90 93 b9 00 	sts	0x00B9, r25
     84e:	80 93 b8 00 	sts	0x00B8, r24

	reDraw();
     852:	2e dd       	rcall	.-1444   	; 0x2b0 <reDraw>
	
	asm("sei");
     854:	78 94       	sei
	
    while(1){
		if(ir.code)
     856:	c7 ec       	ldi	r28, 0xC7	; 199
     858:	d0 e0       	ldi	r29, 0x00	; 0
				case 167944360UL:
					// adc lower
					switch(selected){
						case ADC1: c1 = (c1 > 10 ? c1-10 : 0); eeprom_write_word((uint16_t *)0x00, c1); break;
						case ADC2: c2 = (c2 > 10 ? c2-10 : 0); eeprom_write_word((uint16_t *)0x02, c2); break;
						case ADC3: c3 = (c3 > 10 ? c3-10 : 0); eeprom_write_word((uint16_t *)0x04, c3); break;
     85a:	00 e0       	ldi	r16, 0x00	; 0
     85c:	10 e0       	ldi	r17, 0x00	; 0
				case 8563240UL:
					// adc up
					switch(selected){
						case ADC1: c1 = (c1 < 1013 ? c1+10 : 1023); eeprom_write_word((uint16_t *)0x00, c1); break;
						case ADC2: c2 = (c2 < 1013 ? c2+10 : 1023); eeprom_write_word((uint16_t *)0x02, c2); break;
						case ADC3: c3 = (c3 < 1013 ? c3+10 : 1023); eeprom_write_word((uint16_t *)0x04, c3); break;
     85e:	0f 2e       	mov	r0, r31
     860:	ff ef       	ldi	r31, 0xFF	; 255
     862:	ef 2e       	mov	r14, r31
     864:	f3 e0       	ldi	r31, 0x03	; 3
     866:	ff 2e       	mov	r15, r31
     868:	f0 2d       	mov	r31, r0
	reDraw();
	
	asm("sei");
	
    while(1){
		if(ir.code)
     86a:	88 81       	ld	r24, Y
     86c:	99 81       	ldd	r25, Y+1	; 0x01
     86e:	aa 81       	ldd	r26, Y+2	; 0x02
     870:	bb 81       	ldd	r27, Y+3	; 0x03
     872:	00 97       	sbiw	r24, 0x00	; 0
     874:	a1 05       	cpc	r26, r1
     876:	b1 05       	cpc	r27, r1
     878:	c1 f3       	breq	.-16     	; 0x86a <main+0x18c>
		{
			switch(ir.code){
     87a:	88 81       	ld	r24, Y
     87c:	99 81       	ldd	r25, Y+1	; 0x01
     87e:	aa 81       	ldd	r26, Y+2	; 0x02
     880:	bb 81       	ldd	r27, Y+3	; 0x03
     882:	88 3a       	cpi	r24, 0xA8	; 168
     884:	28 ea       	ldi	r18, 0xA8	; 168
     886:	92 07       	cpc	r25, r18
     888:	22 e0       	ldi	r18, 0x02	; 2
     88a:	a2 07       	cpc	r26, r18
     88c:	22 e0       	ldi	r18, 0x02	; 2
     88e:	b2 07       	cpc	r27, r18
     890:	09 f4       	brne	.+2      	; 0x894 <main+0x1b6>
     892:	3f c0       	rjmp	.+126    	; 0x912 <main+0x234>
     894:	89 3a       	cpi	r24, 0xA9	; 169
     896:	28 ea       	ldi	r18, 0xA8	; 168
     898:	92 07       	cpc	r25, r18
     89a:	22 e0       	ldi	r18, 0x02	; 2
     89c:	a2 07       	cpc	r26, r18
     89e:	22 e0       	ldi	r18, 0x02	; 2
     8a0:	b2 07       	cpc	r27, r18
     8a2:	98 f4       	brcc	.+38     	; 0x8ca <main+0x1ec>
     8a4:	88 3a       	cpi	r24, 0xA8	; 168
     8a6:	2a ea       	ldi	r18, 0xAA	; 170
     8a8:	92 07       	cpc	r25, r18
     8aa:	22 e0       	ldi	r18, 0x02	; 2
     8ac:	a2 07       	cpc	r26, r18
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	b2 07       	cpc	r27, r18
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <main+0x1d8>
     8b4:	a4 c1       	rjmp	.+840    	; 0xbfe <main+0x520>
     8b6:	88 32       	cpi	r24, 0x28	; 40
     8b8:	2a ea       	ldi	r18, 0xAA	; 170
     8ba:	92 07       	cpc	r25, r18
     8bc:	22 e8       	ldi	r18, 0x82	; 130
     8be:	a2 07       	cpc	r26, r18
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	b2 07       	cpc	r27, r18
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <main+0x1ea>
     8c6:	d8 c1       	rjmp	.+944    	; 0xc78 <main+0x59a>
     8c8:	e1 c0       	rjmp	.+450    	; 0xa8c <main+0x3ae>
     8ca:	88 32       	cpi	r24, 0x28	; 40
     8cc:	22 ea       	ldi	r18, 0xA2	; 162
     8ce:	92 07       	cpc	r25, r18
     8d0:	22 e8       	ldi	r18, 0x82	; 130
     8d2:	a2 07       	cpc	r26, r18
     8d4:	28 e0       	ldi	r18, 0x08	; 8
     8d6:	b2 07       	cpc	r27, r18
     8d8:	91 f0       	breq	.+36     	; 0x8fe <main+0x220>
     8da:	88 3a       	cpi	r24, 0xA8	; 168
     8dc:	20 ea       	ldi	r18, 0xA0	; 160
     8de:	92 07       	cpc	r25, r18
     8e0:	22 e0       	ldi	r18, 0x02	; 2
     8e2:	a2 07       	cpc	r26, r18
     8e4:	2a e0       	ldi	r18, 0x0A	; 10
     8e6:	b2 07       	cpc	r27, r18
     8e8:	f1 f0       	breq	.+60     	; 0x926 <main+0x248>
     8ea:	88 3a       	cpi	r24, 0xA8	; 168
     8ec:	22 ea       	ldi	r18, 0xA2	; 162
     8ee:	92 07       	cpc	r25, r18
     8f0:	22 e0       	ldi	r18, 0x02	; 2
     8f2:	a2 07       	cpc	r26, r18
     8f4:	28 e0       	ldi	r18, 0x08	; 8
     8f6:	b2 07       	cpc	r27, r18
     8f8:	09 f0       	breq	.+2      	; 0x8fc <main+0x21e>
     8fa:	be c1       	rjmp	.+892    	; 0xc78 <main+0x59a>
     8fc:	9f c1       	rjmp	.+830    	; 0xc3c <main+0x55e>
				case 142778920UL:
					// left select adc
					if(selected){
     8fe:	80 91 c4 00 	lds	r24, 0x00C4
     902:	88 23       	and	r24, r24
     904:	09 f4       	brne	.+2      	; 0x908 <main+0x22a>
     906:	b8 c1       	rjmp	.+880    	; 0xc78 <main+0x59a>
						selected--;
     908:	81 50       	subi	r24, 0x01	; 1
     90a:	80 93 c4 00 	sts	0x00C4, r24
						reDraw();
     90e:	d0 dc       	rcall	.-1632   	; 0x2b0 <reDraw>
     910:	b3 c1       	rjmp	.+870    	; 0xc78 <main+0x59a>
					}
				break;
				
				case 33728680UL:
					// right select adc
					if(selected < 5) {
     912:	80 91 c4 00 	lds	r24, 0x00C4
     916:	85 30       	cpi	r24, 0x05	; 5
     918:	08 f0       	brcs	.+2      	; 0x91c <main+0x23e>
     91a:	ae c1       	rjmp	.+860    	; 0xc78 <main+0x59a>
						selected++;
     91c:	8f 5f       	subi	r24, 0xFF	; 255
     91e:	80 93 c4 00 	sts	0x00C4, r24
						reDraw();
     922:	c6 dc       	rcall	.-1652   	; 0x2b0 <reDraw>
     924:	a9 c1       	rjmp	.+850    	; 0xc78 <main+0x59a>
					}
				break;
				
				case 167944360UL:
					// adc lower
					switch(selected){
     926:	80 91 c4 00 	lds	r24, 0x00C4
     92a:	82 30       	cpi	r24, 0x02	; 2
     92c:	09 f4       	brne	.+2      	; 0x930 <main+0x252>
     92e:	45 c0       	rjmp	.+138    	; 0x9ba <main+0x2dc>
     930:	83 30       	cpi	r24, 0x03	; 3
     932:	30 f4       	brcc	.+12     	; 0x940 <main+0x262>
     934:	88 23       	and	r24, r24
     936:	71 f0       	breq	.+28     	; 0x954 <main+0x276>
     938:	81 30       	cpi	r24, 0x01	; 1
     93a:	09 f0       	breq	.+2      	; 0x93e <main+0x260>
     93c:	a5 c0       	rjmp	.+330    	; 0xa88 <main+0x3aa>
     93e:	23 c0       	rjmp	.+70     	; 0x986 <main+0x2a8>
     940:	84 30       	cpi	r24, 0x04	; 4
     942:	09 f4       	brne	.+2      	; 0x946 <main+0x268>
     944:	6e c0       	rjmp	.+220    	; 0xa22 <main+0x344>
     946:	84 30       	cpi	r24, 0x04	; 4
     948:	08 f4       	brcc	.+2      	; 0x94c <main+0x26e>
     94a:	51 c0       	rjmp	.+162    	; 0x9ee <main+0x310>
     94c:	85 30       	cpi	r24, 0x05	; 5
     94e:	09 f0       	breq	.+2      	; 0x952 <main+0x274>
     950:	9b c0       	rjmp	.+310    	; 0xa88 <main+0x3aa>
     952:	81 c0       	rjmp	.+258    	; 0xa56 <main+0x378>
						case ADC1: c1 = (c1 > 10 ? c1-10 : 0); eeprom_write_word((uint16_t *)0x00, c1); break;
     954:	80 91 c2 00 	lds	r24, 0x00C2
     958:	90 91 c3 00 	lds	r25, 0x00C3
     95c:	8b 30       	cpi	r24, 0x0B	; 11
     95e:	91 05       	cpc	r25, r1
     960:	30 f0       	brcs	.+12     	; 0x96e <main+0x290>
     962:	80 91 c2 00 	lds	r24, 0x00C2
     966:	90 91 c3 00 	lds	r25, 0x00C3
     96a:	0a 97       	sbiw	r24, 0x0a	; 10
     96c:	01 c0       	rjmp	.+2      	; 0x970 <main+0x292>
     96e:	c8 01       	movw	r24, r16
     970:	90 93 c3 00 	sts	0x00C3, r25
     974:	80 93 c2 00 	sts	0x00C2, r24
     978:	60 91 c2 00 	lds	r22, 0x00C2
     97c:	70 91 c3 00 	lds	r23, 0x00C3
     980:	c8 01       	movw	r24, r16
     982:	b3 d3       	rcall	.+1894   	; 0x10ea <__eewr_word_m8>
     984:	81 c0       	rjmp	.+258    	; 0xa88 <main+0x3aa>
						case ADC2: c2 = (c2 > 10 ? c2-10 : 0); eeprom_write_word((uint16_t *)0x02, c2); break;
     986:	80 91 c0 00 	lds	r24, 0x00C0
     98a:	90 91 c1 00 	lds	r25, 0x00C1
     98e:	8b 30       	cpi	r24, 0x0B	; 11
     990:	91 05       	cpc	r25, r1
     992:	30 f0       	brcs	.+12     	; 0x9a0 <main+0x2c2>
     994:	80 91 c0 00 	lds	r24, 0x00C0
     998:	90 91 c1 00 	lds	r25, 0x00C1
     99c:	0a 97       	sbiw	r24, 0x0a	; 10
     99e:	01 c0       	rjmp	.+2      	; 0x9a2 <main+0x2c4>
     9a0:	c8 01       	movw	r24, r16
     9a2:	90 93 c1 00 	sts	0x00C1, r25
     9a6:	80 93 c0 00 	sts	0x00C0, r24
     9aa:	60 91 c0 00 	lds	r22, 0x00C0
     9ae:	70 91 c1 00 	lds	r23, 0x00C1
     9b2:	82 e0       	ldi	r24, 0x02	; 2
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	99 d3       	rcall	.+1842   	; 0x10ea <__eewr_word_m8>
     9b8:	67 c0       	rjmp	.+206    	; 0xa88 <main+0x3aa>
						case ADC3: c3 = (c3 > 10 ? c3-10 : 0); eeprom_write_word((uint16_t *)0x04, c3); break;
     9ba:	80 91 be 00 	lds	r24, 0x00BE
     9be:	90 91 bf 00 	lds	r25, 0x00BF
     9c2:	8b 30       	cpi	r24, 0x0B	; 11
     9c4:	91 05       	cpc	r25, r1
     9c6:	30 f0       	brcs	.+12     	; 0x9d4 <main+0x2f6>
     9c8:	80 91 be 00 	lds	r24, 0x00BE
     9cc:	90 91 bf 00 	lds	r25, 0x00BF
     9d0:	0a 97       	sbiw	r24, 0x0a	; 10
     9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <main+0x2f8>
     9d4:	c8 01       	movw	r24, r16
     9d6:	90 93 bf 00 	sts	0x00BF, r25
     9da:	80 93 be 00 	sts	0x00BE, r24
     9de:	60 91 be 00 	lds	r22, 0x00BE
     9e2:	70 91 bf 00 	lds	r23, 0x00BF
     9e6:	84 e0       	ldi	r24, 0x04	; 4
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	7f d3       	rcall	.+1790   	; 0x10ea <__eewr_word_m8>
     9ec:	4d c0       	rjmp	.+154    	; 0xa88 <main+0x3aa>
						case ADC4: c4 = (c4 > 10 ? c4-10 : 0); eeprom_write_word((uint16_t *)0x06, c4); break;
     9ee:	80 91 bc 00 	lds	r24, 0x00BC
     9f2:	90 91 bd 00 	lds	r25, 0x00BD
     9f6:	8b 30       	cpi	r24, 0x0B	; 11
     9f8:	91 05       	cpc	r25, r1
     9fa:	30 f0       	brcs	.+12     	; 0xa08 <main+0x32a>
     9fc:	80 91 bc 00 	lds	r24, 0x00BC
     a00:	90 91 bd 00 	lds	r25, 0x00BD
     a04:	0a 97       	sbiw	r24, 0x0a	; 10
     a06:	01 c0       	rjmp	.+2      	; 0xa0a <main+0x32c>
     a08:	c8 01       	movw	r24, r16
     a0a:	90 93 bd 00 	sts	0x00BD, r25
     a0e:	80 93 bc 00 	sts	0x00BC, r24
     a12:	60 91 bc 00 	lds	r22, 0x00BC
     a16:	70 91 bd 00 	lds	r23, 0x00BD
     a1a:	86 e0       	ldi	r24, 0x06	; 6
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	65 d3       	rcall	.+1738   	; 0x10ea <__eewr_word_m8>
     a20:	33 c0       	rjmp	.+102    	; 0xa88 <main+0x3aa>
						case ADC5: c5 = (c5 > 10 ? c5-10 : 0); eeprom_write_word((uint16_t *)0x08, c5); break;
     a22:	80 91 ba 00 	lds	r24, 0x00BA
     a26:	90 91 bb 00 	lds	r25, 0x00BB
     a2a:	8b 30       	cpi	r24, 0x0B	; 11
     a2c:	91 05       	cpc	r25, r1
     a2e:	30 f0       	brcs	.+12     	; 0xa3c <main+0x35e>
     a30:	80 91 ba 00 	lds	r24, 0x00BA
     a34:	90 91 bb 00 	lds	r25, 0x00BB
     a38:	0a 97       	sbiw	r24, 0x0a	; 10
     a3a:	01 c0       	rjmp	.+2      	; 0xa3e <main+0x360>
     a3c:	c8 01       	movw	r24, r16
     a3e:	90 93 bb 00 	sts	0x00BB, r25
     a42:	80 93 ba 00 	sts	0x00BA, r24
     a46:	60 91 ba 00 	lds	r22, 0x00BA
     a4a:	70 91 bb 00 	lds	r23, 0x00BB
     a4e:	88 e0       	ldi	r24, 0x08	; 8
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	4b d3       	rcall	.+1686   	; 0x10ea <__eewr_word_m8>
     a54:	19 c0       	rjmp	.+50     	; 0xa88 <main+0x3aa>
						case ADC6: c6 = (c6 > 10 ? c6-10 : 0); eeprom_write_word((uint16_t *)0x0A, c6); break;
     a56:	80 91 b8 00 	lds	r24, 0x00B8
     a5a:	90 91 b9 00 	lds	r25, 0x00B9
     a5e:	8b 30       	cpi	r24, 0x0B	; 11
     a60:	91 05       	cpc	r25, r1
     a62:	30 f0       	brcs	.+12     	; 0xa70 <main+0x392>
     a64:	80 91 b8 00 	lds	r24, 0x00B8
     a68:	90 91 b9 00 	lds	r25, 0x00B9
     a6c:	0a 97       	sbiw	r24, 0x0a	; 10
     a6e:	01 c0       	rjmp	.+2      	; 0xa72 <main+0x394>
     a70:	c8 01       	movw	r24, r16
     a72:	90 93 b9 00 	sts	0x00B9, r25
     a76:	80 93 b8 00 	sts	0x00B8, r24
     a7a:	60 91 b8 00 	lds	r22, 0x00B8
     a7e:	70 91 b9 00 	lds	r23, 0x00B9
     a82:	8a e0       	ldi	r24, 0x0A	; 10
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	31 d3       	rcall	.+1634   	; 0x10ea <__eewr_word_m8>
					}
					
					reDraw();
     a88:	13 dc       	rcall	.-2010   	; 0x2b0 <reDraw>
				break;
     a8a:	f6 c0       	rjmp	.+492    	; 0xc78 <main+0x59a>
				
				case 8563240UL:
					// adc up
					switch(selected){
     a8c:	80 91 c4 00 	lds	r24, 0x00C4
     a90:	82 30       	cpi	r24, 0x02	; 2
     a92:	09 f4       	brne	.+2      	; 0xa96 <main+0x3b8>
     a94:	47 c0       	rjmp	.+142    	; 0xb24 <main+0x446>
     a96:	83 30       	cpi	r24, 0x03	; 3
     a98:	30 f4       	brcc	.+12     	; 0xaa6 <main+0x3c8>
     a9a:	88 23       	and	r24, r24
     a9c:	71 f0       	breq	.+28     	; 0xaba <main+0x3dc>
     a9e:	81 30       	cpi	r24, 0x01	; 1
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <main+0x3c6>
     aa2:	ab c0       	rjmp	.+342    	; 0xbfa <main+0x51c>
     aa4:	24 c0       	rjmp	.+72     	; 0xaee <main+0x410>
     aa6:	84 30       	cpi	r24, 0x04	; 4
     aa8:	09 f4       	brne	.+2      	; 0xaac <main+0x3ce>
     aaa:	72 c0       	rjmp	.+228    	; 0xb90 <main+0x4b2>
     aac:	84 30       	cpi	r24, 0x04	; 4
     aae:	08 f4       	brcc	.+2      	; 0xab2 <main+0x3d4>
     ab0:	54 c0       	rjmp	.+168    	; 0xb5a <main+0x47c>
     ab2:	85 30       	cpi	r24, 0x05	; 5
     ab4:	09 f0       	breq	.+2      	; 0xab8 <main+0x3da>
     ab6:	a1 c0       	rjmp	.+322    	; 0xbfa <main+0x51c>
     ab8:	86 c0       	rjmp	.+268    	; 0xbc6 <main+0x4e8>
						case ADC1: c1 = (c1 < 1013 ? c1+10 : 1023); eeprom_write_word((uint16_t *)0x00, c1); break;
     aba:	80 91 c2 00 	lds	r24, 0x00C2
     abe:	90 91 c3 00 	lds	r25, 0x00C3
     ac2:	23 e0       	ldi	r18, 0x03	; 3
     ac4:	85 3f       	cpi	r24, 0xF5	; 245
     ac6:	92 07       	cpc	r25, r18
     ac8:	30 f4       	brcc	.+12     	; 0xad6 <main+0x3f8>
     aca:	80 91 c2 00 	lds	r24, 0x00C2
     ace:	90 91 c3 00 	lds	r25, 0x00C3
     ad2:	0a 96       	adiw	r24, 0x0a	; 10
     ad4:	01 c0       	rjmp	.+2      	; 0xad8 <main+0x3fa>
     ad6:	c7 01       	movw	r24, r14
     ad8:	90 93 c3 00 	sts	0x00C3, r25
     adc:	80 93 c2 00 	sts	0x00C2, r24
     ae0:	60 91 c2 00 	lds	r22, 0x00C2
     ae4:	70 91 c3 00 	lds	r23, 0x00C3
     ae8:	c8 01       	movw	r24, r16
     aea:	ff d2       	rcall	.+1534   	; 0x10ea <__eewr_word_m8>
     aec:	86 c0       	rjmp	.+268    	; 0xbfa <main+0x51c>
						case ADC2: c2 = (c2 < 1013 ? c2+10 : 1023); eeprom_write_word((uint16_t *)0x02, c2); break;
     aee:	80 91 c0 00 	lds	r24, 0x00C0
     af2:	90 91 c1 00 	lds	r25, 0x00C1
     af6:	23 e0       	ldi	r18, 0x03	; 3
     af8:	85 3f       	cpi	r24, 0xF5	; 245
     afa:	92 07       	cpc	r25, r18
     afc:	30 f4       	brcc	.+12     	; 0xb0a <main+0x42c>
     afe:	80 91 c0 00 	lds	r24, 0x00C0
     b02:	90 91 c1 00 	lds	r25, 0x00C1
     b06:	0a 96       	adiw	r24, 0x0a	; 10
     b08:	01 c0       	rjmp	.+2      	; 0xb0c <main+0x42e>
     b0a:	c7 01       	movw	r24, r14
     b0c:	90 93 c1 00 	sts	0x00C1, r25
     b10:	80 93 c0 00 	sts	0x00C0, r24
     b14:	60 91 c0 00 	lds	r22, 0x00C0
     b18:	70 91 c1 00 	lds	r23, 0x00C1
     b1c:	82 e0       	ldi	r24, 0x02	; 2
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	e4 d2       	rcall	.+1480   	; 0x10ea <__eewr_word_m8>
     b22:	6b c0       	rjmp	.+214    	; 0xbfa <main+0x51c>
						case ADC3: c3 = (c3 < 1013 ? c3+10 : 1023); eeprom_write_word((uint16_t *)0x04, c3); break;
     b24:	80 91 be 00 	lds	r24, 0x00BE
     b28:	90 91 bf 00 	lds	r25, 0x00BF
     b2c:	23 e0       	ldi	r18, 0x03	; 3
     b2e:	85 3f       	cpi	r24, 0xF5	; 245
     b30:	92 07       	cpc	r25, r18
     b32:	30 f4       	brcc	.+12     	; 0xb40 <main+0x462>
     b34:	80 91 be 00 	lds	r24, 0x00BE
     b38:	90 91 bf 00 	lds	r25, 0x00BF
     b3c:	0a 96       	adiw	r24, 0x0a	; 10
     b3e:	01 c0       	rjmp	.+2      	; 0xb42 <main+0x464>
     b40:	c7 01       	movw	r24, r14
     b42:	90 93 bf 00 	sts	0x00BF, r25
     b46:	80 93 be 00 	sts	0x00BE, r24
     b4a:	60 91 be 00 	lds	r22, 0x00BE
     b4e:	70 91 bf 00 	lds	r23, 0x00BF
     b52:	84 e0       	ldi	r24, 0x04	; 4
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	c9 d2       	rcall	.+1426   	; 0x10ea <__eewr_word_m8>
     b58:	50 c0       	rjmp	.+160    	; 0xbfa <main+0x51c>
						case ADC4: c4 = (c4 < 1013 ? c4+10 : 1023); eeprom_write_word((uint16_t *)0x06, c4); break;
     b5a:	80 91 bc 00 	lds	r24, 0x00BC
     b5e:	90 91 bd 00 	lds	r25, 0x00BD
     b62:	23 e0       	ldi	r18, 0x03	; 3
     b64:	85 3f       	cpi	r24, 0xF5	; 245
     b66:	92 07       	cpc	r25, r18
     b68:	30 f4       	brcc	.+12     	; 0xb76 <main+0x498>
     b6a:	80 91 bc 00 	lds	r24, 0x00BC
     b6e:	90 91 bd 00 	lds	r25, 0x00BD
     b72:	0a 96       	adiw	r24, 0x0a	; 10
     b74:	01 c0       	rjmp	.+2      	; 0xb78 <main+0x49a>
     b76:	c7 01       	movw	r24, r14
     b78:	90 93 bd 00 	sts	0x00BD, r25
     b7c:	80 93 bc 00 	sts	0x00BC, r24
     b80:	60 91 bc 00 	lds	r22, 0x00BC
     b84:	70 91 bd 00 	lds	r23, 0x00BD
     b88:	86 e0       	ldi	r24, 0x06	; 6
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	ae d2       	rcall	.+1372   	; 0x10ea <__eewr_word_m8>
     b8e:	35 c0       	rjmp	.+106    	; 0xbfa <main+0x51c>
						case ADC5: c5 = (c5 < 1013 ? c5+10 : 1023); eeprom_write_word((uint16_t *)0x08, c5); break;
     b90:	80 91 ba 00 	lds	r24, 0x00BA
     b94:	90 91 bb 00 	lds	r25, 0x00BB
     b98:	23 e0       	ldi	r18, 0x03	; 3
     b9a:	85 3f       	cpi	r24, 0xF5	; 245
     b9c:	92 07       	cpc	r25, r18
     b9e:	30 f4       	brcc	.+12     	; 0xbac <main+0x4ce>
     ba0:	80 91 ba 00 	lds	r24, 0x00BA
     ba4:	90 91 bb 00 	lds	r25, 0x00BB
     ba8:	0a 96       	adiw	r24, 0x0a	; 10
     baa:	01 c0       	rjmp	.+2      	; 0xbae <main+0x4d0>
     bac:	c7 01       	movw	r24, r14
     bae:	90 93 bb 00 	sts	0x00BB, r25
     bb2:	80 93 ba 00 	sts	0x00BA, r24
     bb6:	60 91 ba 00 	lds	r22, 0x00BA
     bba:	70 91 bb 00 	lds	r23, 0x00BB
     bbe:	88 e0       	ldi	r24, 0x08	; 8
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	93 d2       	rcall	.+1318   	; 0x10ea <__eewr_word_m8>
     bc4:	1a c0       	rjmp	.+52     	; 0xbfa <main+0x51c>
						case ADC6: c6 = (c6 < 1013 ? c6+10 : 1023); eeprom_write_word((uint16_t *)0x0A, c6); break;
     bc6:	80 91 b8 00 	lds	r24, 0x00B8
     bca:	90 91 b9 00 	lds	r25, 0x00B9
     bce:	23 e0       	ldi	r18, 0x03	; 3
     bd0:	85 3f       	cpi	r24, 0xF5	; 245
     bd2:	92 07       	cpc	r25, r18
     bd4:	30 f4       	brcc	.+12     	; 0xbe2 <main+0x504>
     bd6:	80 91 b8 00 	lds	r24, 0x00B8
     bda:	90 91 b9 00 	lds	r25, 0x00B9
     bde:	0a 96       	adiw	r24, 0x0a	; 10
     be0:	01 c0       	rjmp	.+2      	; 0xbe4 <main+0x506>
     be2:	c7 01       	movw	r24, r14
     be4:	90 93 b9 00 	sts	0x00B9, r25
     be8:	80 93 b8 00 	sts	0x00B8, r24
     bec:	60 91 b8 00 	lds	r22, 0x00B8
     bf0:	70 91 b9 00 	lds	r23, 0x00B9
     bf4:	8a e0       	ldi	r24, 0x0A	; 10
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	78 d2       	rcall	.+1264   	; 0x10ea <__eewr_word_m8>
					}
					
					reDraw();
     bfa:	5a db       	rcall	.-2380   	; 0x2b0 <reDraw>
					
				break;
     bfc:	3d c0       	rjmp	.+122    	; 0xc78 <main+0x59a>
				
				case 174760UL:
					// set io out
					switch(selected){
     bfe:	80 91 c4 00 	lds	r24, 0x00C4
     c02:	82 30       	cpi	r24, 0x02	; 2
     c04:	91 f0       	breq	.+36     	; 0xc2a <main+0x54c>
     c06:	83 30       	cpi	r24, 0x03	; 3
     c08:	28 f4       	brcc	.+10     	; 0xc14 <main+0x536>
     c0a:	88 23       	and	r24, r24
     c0c:	51 f0       	breq	.+20     	; 0xc22 <main+0x544>
     c0e:	81 30       	cpi	r24, 0x01	; 1
     c10:	99 f4       	brne	.+38     	; 0xc38 <main+0x55a>
     c12:	09 c0       	rjmp	.+18     	; 0xc26 <main+0x548>
     c14:	84 30       	cpi	r24, 0x04	; 4
     c16:	69 f0       	breq	.+26     	; 0xc32 <main+0x554>
     c18:	84 30       	cpi	r24, 0x04	; 4
     c1a:	48 f0       	brcs	.+18     	; 0xc2e <main+0x550>
     c1c:	85 30       	cpi	r24, 0x05	; 5
     c1e:	61 f4       	brne	.+24     	; 0xc38 <main+0x55a>
     c20:	0a c0       	rjmp	.+20     	; 0xc36 <main+0x558>
						case ADC1: PORTB |= (1<<0); break;
     c22:	c0 9a       	sbi	0x18, 0	; 24
     c24:	09 c0       	rjmp	.+18     	; 0xc38 <main+0x55a>
						case ADC2: PORTB |= (1<<1); break;
     c26:	c1 9a       	sbi	0x18, 1	; 24
     c28:	07 c0       	rjmp	.+14     	; 0xc38 <main+0x55a>
						case ADC3: PORTB |= (1<<2); break;
     c2a:	c2 9a       	sbi	0x18, 2	; 24
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <main+0x55a>
						case ADC4: PORTB |= (1<<3); break;
     c2e:	c3 9a       	sbi	0x18, 3	; 24
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <main+0x55a>
						case ADC5: PORTB |= (1<<4); break;
     c32:	c4 9a       	sbi	0x18, 4	; 24
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <main+0x55a>
						case ADC6: PORTB |= (1<<5); break;
     c36:	c5 9a       	sbi	0x18, 5	; 24
					}
					reDraw();
     c38:	3b db       	rcall	.-2442   	; 0x2b0 <reDraw>
				break;
     c3a:	1e c0       	rjmp	.+60     	; 0xc78 <main+0x59a>
				
				case 134390440UL:
					// clear io out
					switch(selected){
     c3c:	80 91 c4 00 	lds	r24, 0x00C4
     c40:	82 30       	cpi	r24, 0x02	; 2
     c42:	91 f0       	breq	.+36     	; 0xc68 <main+0x58a>
     c44:	83 30       	cpi	r24, 0x03	; 3
     c46:	28 f4       	brcc	.+10     	; 0xc52 <main+0x574>
     c48:	88 23       	and	r24, r24
     c4a:	51 f0       	breq	.+20     	; 0xc60 <main+0x582>
     c4c:	81 30       	cpi	r24, 0x01	; 1
     c4e:	99 f4       	brne	.+38     	; 0xc76 <main+0x598>
     c50:	09 c0       	rjmp	.+18     	; 0xc64 <main+0x586>
     c52:	84 30       	cpi	r24, 0x04	; 4
     c54:	69 f0       	breq	.+26     	; 0xc70 <main+0x592>
     c56:	84 30       	cpi	r24, 0x04	; 4
     c58:	48 f0       	brcs	.+18     	; 0xc6c <main+0x58e>
     c5a:	85 30       	cpi	r24, 0x05	; 5
     c5c:	61 f4       	brne	.+24     	; 0xc76 <main+0x598>
     c5e:	0a c0       	rjmp	.+20     	; 0xc74 <main+0x596>
						case ADC1: PORTB &= ~(1<<0); break;
     c60:	c0 98       	cbi	0x18, 0	; 24
     c62:	09 c0       	rjmp	.+18     	; 0xc76 <main+0x598>
						case ADC2: PORTB &= ~(1<<1); break;
     c64:	c1 98       	cbi	0x18, 1	; 24
     c66:	07 c0       	rjmp	.+14     	; 0xc76 <main+0x598>
						case ADC3: PORTB &= ~(1<<2); break;
     c68:	c2 98       	cbi	0x18, 2	; 24
     c6a:	05 c0       	rjmp	.+10     	; 0xc76 <main+0x598>
						case ADC4: PORTB &= ~(1<<3); break;
     c6c:	c3 98       	cbi	0x18, 3	; 24
     c6e:	03 c0       	rjmp	.+6      	; 0xc76 <main+0x598>
						case ADC5: PORTB &= ~(1<<4); break;
     c70:	c4 98       	cbi	0x18, 4	; 24
     c72:	01 c0       	rjmp	.+2      	; 0xc76 <main+0x598>
						case ADC6: PORTB &= ~(1<<5); break;
     c74:	c5 98       	cbi	0x18, 5	; 24
					}
					reDraw();
     c76:	1c db       	rcall	.-2504   	; 0x2b0 <reDraw>
				break;

			}
			
			ir.code = 0;
     c78:	18 82       	st	Y, r1
     c7a:	19 82       	std	Y+1, r1	; 0x01
     c7c:	1a 82       	std	Y+2, r1	; 0x02
     c7e:	1b 82       	std	Y+3, r1	; 0x03
     c80:	f4 cd       	rjmp	.-1048   	; 0x86a <main+0x18c>

00000c82 <__mulsi3>:
     c82:	62 9f       	mul	r22, r18
     c84:	d0 01       	movw	r26, r0
     c86:	73 9f       	mul	r23, r19
     c88:	f0 01       	movw	r30, r0
     c8a:	82 9f       	mul	r24, r18
     c8c:	e0 0d       	add	r30, r0
     c8e:	f1 1d       	adc	r31, r1
     c90:	64 9f       	mul	r22, r20
     c92:	e0 0d       	add	r30, r0
     c94:	f1 1d       	adc	r31, r1
     c96:	92 9f       	mul	r25, r18
     c98:	f0 0d       	add	r31, r0
     c9a:	83 9f       	mul	r24, r19
     c9c:	f0 0d       	add	r31, r0
     c9e:	74 9f       	mul	r23, r20
     ca0:	f0 0d       	add	r31, r0
     ca2:	65 9f       	mul	r22, r21
     ca4:	f0 0d       	add	r31, r0
     ca6:	99 27       	eor	r25, r25
     ca8:	72 9f       	mul	r23, r18
     caa:	b0 0d       	add	r27, r0
     cac:	e1 1d       	adc	r30, r1
     cae:	f9 1f       	adc	r31, r25
     cb0:	63 9f       	mul	r22, r19
     cb2:	b0 0d       	add	r27, r0
     cb4:	e1 1d       	adc	r30, r1
     cb6:	f9 1f       	adc	r31, r25
     cb8:	bd 01       	movw	r22, r26
     cba:	cf 01       	movw	r24, r30
     cbc:	11 24       	eor	r1, r1
     cbe:	08 95       	ret

00000cc0 <__udivmodsi4>:
     cc0:	a1 e2       	ldi	r26, 0x21	; 33
     cc2:	1a 2e       	mov	r1, r26
     cc4:	aa 1b       	sub	r26, r26
     cc6:	bb 1b       	sub	r27, r27
     cc8:	fd 01       	movw	r30, r26
     cca:	0d c0       	rjmp	.+26     	; 0xce6 <__udivmodsi4_ep>

00000ccc <__udivmodsi4_loop>:
     ccc:	aa 1f       	adc	r26, r26
     cce:	bb 1f       	adc	r27, r27
     cd0:	ee 1f       	adc	r30, r30
     cd2:	ff 1f       	adc	r31, r31
     cd4:	a2 17       	cp	r26, r18
     cd6:	b3 07       	cpc	r27, r19
     cd8:	e4 07       	cpc	r30, r20
     cda:	f5 07       	cpc	r31, r21
     cdc:	20 f0       	brcs	.+8      	; 0xce6 <__udivmodsi4_ep>
     cde:	a2 1b       	sub	r26, r18
     ce0:	b3 0b       	sbc	r27, r19
     ce2:	e4 0b       	sbc	r30, r20
     ce4:	f5 0b       	sbc	r31, r21

00000ce6 <__udivmodsi4_ep>:
     ce6:	66 1f       	adc	r22, r22
     ce8:	77 1f       	adc	r23, r23
     cea:	88 1f       	adc	r24, r24
     cec:	99 1f       	adc	r25, r25
     cee:	1a 94       	dec	r1
     cf0:	69 f7       	brne	.-38     	; 0xccc <__udivmodsi4_loop>
     cf2:	60 95       	com	r22
     cf4:	70 95       	com	r23
     cf6:	80 95       	com	r24
     cf8:	90 95       	com	r25
     cfa:	9b 01       	movw	r18, r22
     cfc:	ac 01       	movw	r20, r24
     cfe:	bd 01       	movw	r22, r26
     d00:	cf 01       	movw	r24, r30
     d02:	08 95       	ret

00000d04 <sprintf>:
     d04:	ae e0       	ldi	r26, 0x0E	; 14
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e7 e8       	ldi	r30, 0x87	; 135
     d0a:	f6 e0       	ldi	r31, 0x06	; 6
     d0c:	bc c2       	rjmp	.+1400   	; 0x1286 <__prologue_saves__+0x1c>
     d0e:	0d 89       	ldd	r16, Y+21	; 0x15
     d10:	1e 89       	ldd	r17, Y+22	; 0x16
     d12:	86 e0       	ldi	r24, 0x06	; 6
     d14:	8c 83       	std	Y+4, r24	; 0x04
     d16:	1a 83       	std	Y+2, r17	; 0x02
     d18:	09 83       	std	Y+1, r16	; 0x01
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	9f e7       	ldi	r25, 0x7F	; 127
     d1e:	9e 83       	std	Y+6, r25	; 0x06
     d20:	8d 83       	std	Y+5, r24	; 0x05
     d22:	ae 01       	movw	r20, r28
     d24:	47 5e       	subi	r20, 0xE7	; 231
     d26:	5f 4f       	sbci	r21, 0xFF	; 255
     d28:	ce 01       	movw	r24, r28
     d2a:	01 96       	adiw	r24, 0x01	; 1
     d2c:	6f 89       	ldd	r22, Y+23	; 0x17
     d2e:	78 8d       	ldd	r23, Y+24	; 0x18
     d30:	08 d0       	rcall	.+16     	; 0xd42 <vfprintf>
     d32:	ef 81       	ldd	r30, Y+7	; 0x07
     d34:	f8 85       	ldd	r31, Y+8	; 0x08
     d36:	e0 0f       	add	r30, r16
     d38:	f1 1f       	adc	r31, r17
     d3a:	10 82       	st	Z, r1
     d3c:	2e 96       	adiw	r28, 0x0e	; 14
     d3e:	e4 e0       	ldi	r30, 0x04	; 4
     d40:	be c2       	rjmp	.+1404   	; 0x12be <__epilogue_restores__+0x1c>

00000d42 <vfprintf>:
     d42:	ad e0       	ldi	r26, 0x0D	; 13
     d44:	b0 e0       	ldi	r27, 0x00	; 0
     d46:	e6 ea       	ldi	r30, 0xA6	; 166
     d48:	f6 e0       	ldi	r31, 0x06	; 6
     d4a:	8f c2       	rjmp	.+1310   	; 0x126a <__prologue_saves__>
     d4c:	3c 01       	movw	r6, r24
     d4e:	7d 87       	std	Y+13, r23	; 0x0d
     d50:	6c 87       	std	Y+12, r22	; 0x0c
     d52:	5a 01       	movw	r10, r20
     d54:	fc 01       	movw	r30, r24
     d56:	17 82       	std	Z+7, r1	; 0x07
     d58:	16 82       	std	Z+6, r1	; 0x06
     d5a:	83 81       	ldd	r24, Z+3	; 0x03
     d5c:	81 ff       	sbrs	r24, 1
     d5e:	bb c1       	rjmp	.+886    	; 0x10d6 <vfprintf+0x394>
     d60:	2e 01       	movw	r4, r28
     d62:	08 94       	sec
     d64:	41 1c       	adc	r4, r1
     d66:	51 1c       	adc	r5, r1
     d68:	f3 01       	movw	r30, r6
     d6a:	93 81       	ldd	r25, Z+3	; 0x03
     d6c:	ec 85       	ldd	r30, Y+12	; 0x0c
     d6e:	fd 85       	ldd	r31, Y+13	; 0x0d
     d70:	93 fd       	sbrc	r25, 3
     d72:	85 91       	lpm	r24, Z+
     d74:	93 ff       	sbrs	r25, 3
     d76:	81 91       	ld	r24, Z+
     d78:	fd 87       	std	Y+13, r31	; 0x0d
     d7a:	ec 87       	std	Y+12, r30	; 0x0c
     d7c:	88 23       	and	r24, r24
     d7e:	09 f4       	brne	.+2      	; 0xd82 <vfprintf+0x40>
     d80:	a6 c1       	rjmp	.+844    	; 0x10ce <vfprintf+0x38c>
     d82:	85 32       	cpi	r24, 0x25	; 37
     d84:	41 f4       	brne	.+16     	; 0xd96 <vfprintf+0x54>
     d86:	93 fd       	sbrc	r25, 3
     d88:	85 91       	lpm	r24, Z+
     d8a:	93 ff       	sbrs	r25, 3
     d8c:	81 91       	ld	r24, Z+
     d8e:	fd 87       	std	Y+13, r31	; 0x0d
     d90:	ec 87       	std	Y+12, r30	; 0x0c
     d92:	85 32       	cpi	r24, 0x25	; 37
     d94:	21 f4       	brne	.+8      	; 0xd9e <vfprintf+0x5c>
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	b3 01       	movw	r22, r6
     d9a:	c0 d1       	rcall	.+896    	; 0x111c <fputc>
     d9c:	e5 cf       	rjmp	.-54     	; 0xd68 <vfprintf+0x26>
     d9e:	ff 24       	eor	r15, r15
     da0:	ee 24       	eor	r14, r14
     da2:	10 e0       	ldi	r17, 0x00	; 0
     da4:	10 32       	cpi	r17, 0x20	; 32
     da6:	b0 f4       	brcc	.+44     	; 0xdd4 <vfprintf+0x92>
     da8:	8b 32       	cpi	r24, 0x2B	; 43
     daa:	69 f0       	breq	.+26     	; 0xdc6 <vfprintf+0x84>
     dac:	8c 32       	cpi	r24, 0x2C	; 44
     dae:	28 f4       	brcc	.+10     	; 0xdba <vfprintf+0x78>
     db0:	80 32       	cpi	r24, 0x20	; 32
     db2:	51 f0       	breq	.+20     	; 0xdc8 <vfprintf+0x86>
     db4:	83 32       	cpi	r24, 0x23	; 35
     db6:	71 f4       	brne	.+28     	; 0xdd4 <vfprintf+0x92>
     db8:	0b c0       	rjmp	.+22     	; 0xdd0 <vfprintf+0x8e>
     dba:	8d 32       	cpi	r24, 0x2D	; 45
     dbc:	39 f0       	breq	.+14     	; 0xdcc <vfprintf+0x8a>
     dbe:	80 33       	cpi	r24, 0x30	; 48
     dc0:	49 f4       	brne	.+18     	; 0xdd4 <vfprintf+0x92>
     dc2:	11 60       	ori	r17, 0x01	; 1
     dc4:	2c c0       	rjmp	.+88     	; 0xe1e <vfprintf+0xdc>
     dc6:	12 60       	ori	r17, 0x02	; 2
     dc8:	14 60       	ori	r17, 0x04	; 4
     dca:	29 c0       	rjmp	.+82     	; 0xe1e <vfprintf+0xdc>
     dcc:	18 60       	ori	r17, 0x08	; 8
     dce:	27 c0       	rjmp	.+78     	; 0xe1e <vfprintf+0xdc>
     dd0:	10 61       	ori	r17, 0x10	; 16
     dd2:	25 c0       	rjmp	.+74     	; 0xe1e <vfprintf+0xdc>
     dd4:	17 fd       	sbrc	r17, 7
     dd6:	2e c0       	rjmp	.+92     	; 0xe34 <vfprintf+0xf2>
     dd8:	28 2f       	mov	r18, r24
     dda:	20 53       	subi	r18, 0x30	; 48
     ddc:	2a 30       	cpi	r18, 0x0A	; 10
     dde:	98 f4       	brcc	.+38     	; 0xe06 <vfprintf+0xc4>
     de0:	16 ff       	sbrs	r17, 6
     de2:	08 c0       	rjmp	.+16     	; 0xdf4 <vfprintf+0xb2>
     de4:	8f 2d       	mov	r24, r15
     de6:	88 0f       	add	r24, r24
     de8:	f8 2e       	mov	r15, r24
     dea:	ff 0c       	add	r15, r15
     dec:	ff 0c       	add	r15, r15
     dee:	f8 0e       	add	r15, r24
     df0:	f2 0e       	add	r15, r18
     df2:	15 c0       	rjmp	.+42     	; 0xe1e <vfprintf+0xdc>
     df4:	8e 2d       	mov	r24, r14
     df6:	88 0f       	add	r24, r24
     df8:	e8 2e       	mov	r14, r24
     dfa:	ee 0c       	add	r14, r14
     dfc:	ee 0c       	add	r14, r14
     dfe:	e8 0e       	add	r14, r24
     e00:	e2 0e       	add	r14, r18
     e02:	10 62       	ori	r17, 0x20	; 32
     e04:	0c c0       	rjmp	.+24     	; 0xe1e <vfprintf+0xdc>
     e06:	8e 32       	cpi	r24, 0x2E	; 46
     e08:	21 f4       	brne	.+8      	; 0xe12 <vfprintf+0xd0>
     e0a:	16 fd       	sbrc	r17, 6
     e0c:	60 c1       	rjmp	.+704    	; 0x10ce <vfprintf+0x38c>
     e0e:	10 64       	ori	r17, 0x40	; 64
     e10:	06 c0       	rjmp	.+12     	; 0xe1e <vfprintf+0xdc>
     e12:	8c 36       	cpi	r24, 0x6C	; 108
     e14:	11 f4       	brne	.+4      	; 0xe1a <vfprintf+0xd8>
     e16:	10 68       	ori	r17, 0x80	; 128
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0xdc>
     e1a:	88 36       	cpi	r24, 0x68	; 104
     e1c:	59 f4       	brne	.+22     	; 0xe34 <vfprintf+0xf2>
     e1e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e20:	fd 85       	ldd	r31, Y+13	; 0x0d
     e22:	93 fd       	sbrc	r25, 3
     e24:	85 91       	lpm	r24, Z+
     e26:	93 ff       	sbrs	r25, 3
     e28:	81 91       	ld	r24, Z+
     e2a:	fd 87       	std	Y+13, r31	; 0x0d
     e2c:	ec 87       	std	Y+12, r30	; 0x0c
     e2e:	88 23       	and	r24, r24
     e30:	09 f0       	breq	.+2      	; 0xe34 <vfprintf+0xf2>
     e32:	b8 cf       	rjmp	.-144    	; 0xda4 <vfprintf+0x62>
     e34:	98 2f       	mov	r25, r24
     e36:	95 54       	subi	r25, 0x45	; 69
     e38:	93 30       	cpi	r25, 0x03	; 3
     e3a:	18 f0       	brcs	.+6      	; 0xe42 <vfprintf+0x100>
     e3c:	90 52       	subi	r25, 0x20	; 32
     e3e:	93 30       	cpi	r25, 0x03	; 3
     e40:	38 f4       	brcc	.+14     	; 0xe50 <vfprintf+0x10e>
     e42:	24 e0       	ldi	r18, 0x04	; 4
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	a2 0e       	add	r10, r18
     e48:	b3 1e       	adc	r11, r19
     e4a:	3f e3       	ldi	r19, 0x3F	; 63
     e4c:	39 83       	std	Y+1, r19	; 0x01
     e4e:	0f c0       	rjmp	.+30     	; 0xe6e <vfprintf+0x12c>
     e50:	83 36       	cpi	r24, 0x63	; 99
     e52:	31 f0       	breq	.+12     	; 0xe60 <vfprintf+0x11e>
     e54:	83 37       	cpi	r24, 0x73	; 115
     e56:	81 f0       	breq	.+32     	; 0xe78 <vfprintf+0x136>
     e58:	83 35       	cpi	r24, 0x53	; 83
     e5a:	09 f0       	breq	.+2      	; 0xe5e <vfprintf+0x11c>
     e5c:	56 c0       	rjmp	.+172    	; 0xf0a <vfprintf+0x1c8>
     e5e:	21 c0       	rjmp	.+66     	; 0xea2 <vfprintf+0x160>
     e60:	f5 01       	movw	r30, r10
     e62:	80 81       	ld	r24, Z
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	22 e0       	ldi	r18, 0x02	; 2
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	a2 0e       	add	r10, r18
     e6c:	b3 1e       	adc	r11, r19
     e6e:	21 e0       	ldi	r18, 0x01	; 1
     e70:	c2 2e       	mov	r12, r18
     e72:	d1 2c       	mov	r13, r1
     e74:	42 01       	movw	r8, r4
     e76:	13 c0       	rjmp	.+38     	; 0xe9e <vfprintf+0x15c>
     e78:	92 e0       	ldi	r25, 0x02	; 2
     e7a:	29 2e       	mov	r2, r25
     e7c:	31 2c       	mov	r3, r1
     e7e:	2a 0c       	add	r2, r10
     e80:	3b 1c       	adc	r3, r11
     e82:	f5 01       	movw	r30, r10
     e84:	80 80       	ld	r8, Z
     e86:	91 80       	ldd	r9, Z+1	; 0x01
     e88:	16 ff       	sbrs	r17, 6
     e8a:	03 c0       	rjmp	.+6      	; 0xe92 <vfprintf+0x150>
     e8c:	6f 2d       	mov	r22, r15
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <vfprintf+0x154>
     e92:	6f ef       	ldi	r22, 0xFF	; 255
     e94:	7f ef       	ldi	r23, 0xFF	; 255
     e96:	c4 01       	movw	r24, r8
     e98:	36 d1       	rcall	.+620    	; 0x1106 <strnlen>
     e9a:	6c 01       	movw	r12, r24
     e9c:	51 01       	movw	r10, r2
     e9e:	1f 77       	andi	r17, 0x7F	; 127
     ea0:	14 c0       	rjmp	.+40     	; 0xeca <vfprintf+0x188>
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	28 2e       	mov	r2, r24
     ea6:	31 2c       	mov	r3, r1
     ea8:	2a 0c       	add	r2, r10
     eaa:	3b 1c       	adc	r3, r11
     eac:	f5 01       	movw	r30, r10
     eae:	80 80       	ld	r8, Z
     eb0:	91 80       	ldd	r9, Z+1	; 0x01
     eb2:	16 ff       	sbrs	r17, 6
     eb4:	03 c0       	rjmp	.+6      	; 0xebc <vfprintf+0x17a>
     eb6:	6f 2d       	mov	r22, r15
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <vfprintf+0x17e>
     ebc:	6f ef       	ldi	r22, 0xFF	; 255
     ebe:	7f ef       	ldi	r23, 0xFF	; 255
     ec0:	c4 01       	movw	r24, r8
     ec2:	16 d1       	rcall	.+556    	; 0x10f0 <strnlen_P>
     ec4:	6c 01       	movw	r12, r24
     ec6:	10 68       	ori	r17, 0x80	; 128
     ec8:	51 01       	movw	r10, r2
     eca:	13 fd       	sbrc	r17, 3
     ecc:	1a c0       	rjmp	.+52     	; 0xf02 <vfprintf+0x1c0>
     ece:	05 c0       	rjmp	.+10     	; 0xeda <vfprintf+0x198>
     ed0:	80 e2       	ldi	r24, 0x20	; 32
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	b3 01       	movw	r22, r6
     ed6:	22 d1       	rcall	.+580    	; 0x111c <fputc>
     ed8:	ea 94       	dec	r14
     eda:	8e 2d       	mov	r24, r14
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	c8 16       	cp	r12, r24
     ee0:	d9 06       	cpc	r13, r25
     ee2:	b0 f3       	brcs	.-20     	; 0xed0 <vfprintf+0x18e>
     ee4:	0e c0       	rjmp	.+28     	; 0xf02 <vfprintf+0x1c0>
     ee6:	f4 01       	movw	r30, r8
     ee8:	17 fd       	sbrc	r17, 7
     eea:	85 91       	lpm	r24, Z+
     eec:	17 ff       	sbrs	r17, 7
     eee:	81 91       	ld	r24, Z+
     ef0:	4f 01       	movw	r8, r30
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	b3 01       	movw	r22, r6
     ef6:	12 d1       	rcall	.+548    	; 0x111c <fputc>
     ef8:	e1 10       	cpse	r14, r1
     efa:	ea 94       	dec	r14
     efc:	08 94       	sec
     efe:	c1 08       	sbc	r12, r1
     f00:	d1 08       	sbc	r13, r1
     f02:	c1 14       	cp	r12, r1
     f04:	d1 04       	cpc	r13, r1
     f06:	79 f7       	brne	.-34     	; 0xee6 <vfprintf+0x1a4>
     f08:	df c0       	rjmp	.+446    	; 0x10c8 <vfprintf+0x386>
     f0a:	84 36       	cpi	r24, 0x64	; 100
     f0c:	11 f0       	breq	.+4      	; 0xf12 <vfprintf+0x1d0>
     f0e:	89 36       	cpi	r24, 0x69	; 105
     f10:	49 f5       	brne	.+82     	; 0xf64 <vfprintf+0x222>
     f12:	f5 01       	movw	r30, r10
     f14:	17 ff       	sbrs	r17, 7
     f16:	07 c0       	rjmp	.+14     	; 0xf26 <vfprintf+0x1e4>
     f18:	80 81       	ld	r24, Z
     f1a:	91 81       	ldd	r25, Z+1	; 0x01
     f1c:	a2 81       	ldd	r26, Z+2	; 0x02
     f1e:	b3 81       	ldd	r27, Z+3	; 0x03
     f20:	24 e0       	ldi	r18, 0x04	; 4
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	08 c0       	rjmp	.+16     	; 0xf36 <vfprintf+0x1f4>
     f26:	80 81       	ld	r24, Z
     f28:	91 81       	ldd	r25, Z+1	; 0x01
     f2a:	aa 27       	eor	r26, r26
     f2c:	97 fd       	sbrc	r25, 7
     f2e:	a0 95       	com	r26
     f30:	ba 2f       	mov	r27, r26
     f32:	22 e0       	ldi	r18, 0x02	; 2
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	a2 0e       	add	r10, r18
     f38:	b3 1e       	adc	r11, r19
     f3a:	01 2f       	mov	r16, r17
     f3c:	0f 76       	andi	r16, 0x6F	; 111
     f3e:	b7 ff       	sbrs	r27, 7
     f40:	08 c0       	rjmp	.+16     	; 0xf52 <vfprintf+0x210>
     f42:	b0 95       	com	r27
     f44:	a0 95       	com	r26
     f46:	90 95       	com	r25
     f48:	81 95       	neg	r24
     f4a:	9f 4f       	sbci	r25, 0xFF	; 255
     f4c:	af 4f       	sbci	r26, 0xFF	; 255
     f4e:	bf 4f       	sbci	r27, 0xFF	; 255
     f50:	00 68       	ori	r16, 0x80	; 128
     f52:	bc 01       	movw	r22, r24
     f54:	cd 01       	movw	r24, r26
     f56:	a2 01       	movw	r20, r4
     f58:	2a e0       	ldi	r18, 0x0A	; 10
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	0b d1       	rcall	.+534    	; 0x1174 <__ultoa_invert>
     f5e:	d8 2e       	mov	r13, r24
     f60:	d4 18       	sub	r13, r4
     f62:	3e c0       	rjmp	.+124    	; 0xfe0 <vfprintf+0x29e>
     f64:	85 37       	cpi	r24, 0x75	; 117
     f66:	21 f4       	brne	.+8      	; 0xf70 <vfprintf+0x22e>
     f68:	1f 7e       	andi	r17, 0xEF	; 239
     f6a:	2a e0       	ldi	r18, 0x0A	; 10
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	20 c0       	rjmp	.+64     	; 0xfb0 <vfprintf+0x26e>
     f70:	19 7f       	andi	r17, 0xF9	; 249
     f72:	8f 36       	cpi	r24, 0x6F	; 111
     f74:	a9 f0       	breq	.+42     	; 0xfa0 <vfprintf+0x25e>
     f76:	80 37       	cpi	r24, 0x70	; 112
     f78:	20 f4       	brcc	.+8      	; 0xf82 <vfprintf+0x240>
     f7a:	88 35       	cpi	r24, 0x58	; 88
     f7c:	09 f0       	breq	.+2      	; 0xf80 <vfprintf+0x23e>
     f7e:	a7 c0       	rjmp	.+334    	; 0x10ce <vfprintf+0x38c>
     f80:	0b c0       	rjmp	.+22     	; 0xf98 <vfprintf+0x256>
     f82:	80 37       	cpi	r24, 0x70	; 112
     f84:	21 f0       	breq	.+8      	; 0xf8e <vfprintf+0x24c>
     f86:	88 37       	cpi	r24, 0x78	; 120
     f88:	09 f0       	breq	.+2      	; 0xf8c <vfprintf+0x24a>
     f8a:	a1 c0       	rjmp	.+322    	; 0x10ce <vfprintf+0x38c>
     f8c:	01 c0       	rjmp	.+2      	; 0xf90 <vfprintf+0x24e>
     f8e:	10 61       	ori	r17, 0x10	; 16
     f90:	14 ff       	sbrs	r17, 4
     f92:	09 c0       	rjmp	.+18     	; 0xfa6 <vfprintf+0x264>
     f94:	14 60       	ori	r17, 0x04	; 4
     f96:	07 c0       	rjmp	.+14     	; 0xfa6 <vfprintf+0x264>
     f98:	14 ff       	sbrs	r17, 4
     f9a:	08 c0       	rjmp	.+16     	; 0xfac <vfprintf+0x26a>
     f9c:	16 60       	ori	r17, 0x06	; 6
     f9e:	06 c0       	rjmp	.+12     	; 0xfac <vfprintf+0x26a>
     fa0:	28 e0       	ldi	r18, 0x08	; 8
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	05 c0       	rjmp	.+10     	; 0xfb0 <vfprintf+0x26e>
     fa6:	20 e1       	ldi	r18, 0x10	; 16
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <vfprintf+0x26e>
     fac:	20 e1       	ldi	r18, 0x10	; 16
     fae:	32 e0       	ldi	r19, 0x02	; 2
     fb0:	f5 01       	movw	r30, r10
     fb2:	17 ff       	sbrs	r17, 7
     fb4:	07 c0       	rjmp	.+14     	; 0xfc4 <vfprintf+0x282>
     fb6:	60 81       	ld	r22, Z
     fb8:	71 81       	ldd	r23, Z+1	; 0x01
     fba:	82 81       	ldd	r24, Z+2	; 0x02
     fbc:	93 81       	ldd	r25, Z+3	; 0x03
     fbe:	44 e0       	ldi	r20, 0x04	; 4
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	06 c0       	rjmp	.+12     	; 0xfd0 <vfprintf+0x28e>
     fc4:	60 81       	ld	r22, Z
     fc6:	71 81       	ldd	r23, Z+1	; 0x01
     fc8:	80 e0       	ldi	r24, 0x00	; 0
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	42 e0       	ldi	r20, 0x02	; 2
     fce:	50 e0       	ldi	r21, 0x00	; 0
     fd0:	a4 0e       	add	r10, r20
     fd2:	b5 1e       	adc	r11, r21
     fd4:	a2 01       	movw	r20, r4
     fd6:	ce d0       	rcall	.+412    	; 0x1174 <__ultoa_invert>
     fd8:	d8 2e       	mov	r13, r24
     fda:	d4 18       	sub	r13, r4
     fdc:	01 2f       	mov	r16, r17
     fde:	0f 77       	andi	r16, 0x7F	; 127
     fe0:	06 ff       	sbrs	r16, 6
     fe2:	09 c0       	rjmp	.+18     	; 0xff6 <vfprintf+0x2b4>
     fe4:	0e 7f       	andi	r16, 0xFE	; 254
     fe6:	df 14       	cp	r13, r15
     fe8:	30 f4       	brcc	.+12     	; 0xff6 <vfprintf+0x2b4>
     fea:	04 ff       	sbrs	r16, 4
     fec:	06 c0       	rjmp	.+12     	; 0xffa <vfprintf+0x2b8>
     fee:	02 fd       	sbrc	r16, 2
     ff0:	04 c0       	rjmp	.+8      	; 0xffa <vfprintf+0x2b8>
     ff2:	0f 7e       	andi	r16, 0xEF	; 239
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <vfprintf+0x2b8>
     ff6:	1d 2d       	mov	r17, r13
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <vfprintf+0x2ba>
     ffa:	1f 2d       	mov	r17, r15
     ffc:	80 2f       	mov	r24, r16
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	04 ff       	sbrs	r16, 4
    1002:	0c c0       	rjmp	.+24     	; 0x101c <vfprintf+0x2da>
    1004:	fe 01       	movw	r30, r28
    1006:	ed 0d       	add	r30, r13
    1008:	f1 1d       	adc	r31, r1
    100a:	20 81       	ld	r18, Z
    100c:	20 33       	cpi	r18, 0x30	; 48
    100e:	11 f4       	brne	.+4      	; 0x1014 <vfprintf+0x2d2>
    1010:	09 7e       	andi	r16, 0xE9	; 233
    1012:	09 c0       	rjmp	.+18     	; 0x1026 <vfprintf+0x2e4>
    1014:	02 ff       	sbrs	r16, 2
    1016:	06 c0       	rjmp	.+12     	; 0x1024 <vfprintf+0x2e2>
    1018:	1e 5f       	subi	r17, 0xFE	; 254
    101a:	05 c0       	rjmp	.+10     	; 0x1026 <vfprintf+0x2e4>
    101c:	86 78       	andi	r24, 0x86	; 134
    101e:	90 70       	andi	r25, 0x00	; 0
    1020:	00 97       	sbiw	r24, 0x00	; 0
    1022:	09 f0       	breq	.+2      	; 0x1026 <vfprintf+0x2e4>
    1024:	1f 5f       	subi	r17, 0xFF	; 255
    1026:	80 2e       	mov	r8, r16
    1028:	99 24       	eor	r9, r9
    102a:	03 fd       	sbrc	r16, 3
    102c:	11 c0       	rjmp	.+34     	; 0x1050 <vfprintf+0x30e>
    102e:	00 ff       	sbrs	r16, 0
    1030:	0c c0       	rjmp	.+24     	; 0x104a <vfprintf+0x308>
    1032:	fd 2c       	mov	r15, r13
    1034:	1e 15       	cp	r17, r14
    1036:	48 f4       	brcc	.+18     	; 0x104a <vfprintf+0x308>
    1038:	fe 0c       	add	r15, r14
    103a:	f1 1a       	sub	r15, r17
    103c:	1e 2d       	mov	r17, r14
    103e:	05 c0       	rjmp	.+10     	; 0x104a <vfprintf+0x308>
    1040:	80 e2       	ldi	r24, 0x20	; 32
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	b3 01       	movw	r22, r6
    1046:	6a d0       	rcall	.+212    	; 0x111c <fputc>
    1048:	1f 5f       	subi	r17, 0xFF	; 255
    104a:	1e 15       	cp	r17, r14
    104c:	c8 f3       	brcs	.-14     	; 0x1040 <vfprintf+0x2fe>
    104e:	04 c0       	rjmp	.+8      	; 0x1058 <vfprintf+0x316>
    1050:	1e 15       	cp	r17, r14
    1052:	10 f4       	brcc	.+4      	; 0x1058 <vfprintf+0x316>
    1054:	e1 1a       	sub	r14, r17
    1056:	01 c0       	rjmp	.+2      	; 0x105a <vfprintf+0x318>
    1058:	ee 24       	eor	r14, r14
    105a:	84 fe       	sbrs	r8, 4
    105c:	0e c0       	rjmp	.+28     	; 0x107a <vfprintf+0x338>
    105e:	80 e3       	ldi	r24, 0x30	; 48
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	b3 01       	movw	r22, r6
    1064:	5b d0       	rcall	.+182    	; 0x111c <fputc>
    1066:	82 fe       	sbrs	r8, 2
    1068:	1d c0       	rjmp	.+58     	; 0x10a4 <vfprintf+0x362>
    106a:	81 fe       	sbrs	r8, 1
    106c:	03 c0       	rjmp	.+6      	; 0x1074 <vfprintf+0x332>
    106e:	88 e5       	ldi	r24, 0x58	; 88
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	10 c0       	rjmp	.+32     	; 0x1094 <vfprintf+0x352>
    1074:	88 e7       	ldi	r24, 0x78	; 120
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	0d c0       	rjmp	.+26     	; 0x1094 <vfprintf+0x352>
    107a:	c4 01       	movw	r24, r8
    107c:	86 78       	andi	r24, 0x86	; 134
    107e:	90 70       	andi	r25, 0x00	; 0
    1080:	00 97       	sbiw	r24, 0x00	; 0
    1082:	81 f0       	breq	.+32     	; 0x10a4 <vfprintf+0x362>
    1084:	81 fc       	sbrc	r8, 1
    1086:	02 c0       	rjmp	.+4      	; 0x108c <vfprintf+0x34a>
    1088:	80 e2       	ldi	r24, 0x20	; 32
    108a:	01 c0       	rjmp	.+2      	; 0x108e <vfprintf+0x34c>
    108c:	8b e2       	ldi	r24, 0x2B	; 43
    108e:	07 fd       	sbrc	r16, 7
    1090:	8d e2       	ldi	r24, 0x2D	; 45
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	b3 01       	movw	r22, r6
    1096:	42 d0       	rcall	.+132    	; 0x111c <fputc>
    1098:	05 c0       	rjmp	.+10     	; 0x10a4 <vfprintf+0x362>
    109a:	80 e3       	ldi	r24, 0x30	; 48
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	b3 01       	movw	r22, r6
    10a0:	3d d0       	rcall	.+122    	; 0x111c <fputc>
    10a2:	fa 94       	dec	r15
    10a4:	df 14       	cp	r13, r15
    10a6:	c8 f3       	brcs	.-14     	; 0x109a <vfprintf+0x358>
    10a8:	da 94       	dec	r13
    10aa:	f2 01       	movw	r30, r4
    10ac:	ed 0d       	add	r30, r13
    10ae:	f1 1d       	adc	r31, r1
    10b0:	80 81       	ld	r24, Z
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	b3 01       	movw	r22, r6
    10b6:	32 d0       	rcall	.+100    	; 0x111c <fputc>
    10b8:	dd 20       	and	r13, r13
    10ba:	b1 f7       	brne	.-20     	; 0x10a8 <vfprintf+0x366>
    10bc:	05 c0       	rjmp	.+10     	; 0x10c8 <vfprintf+0x386>
    10be:	80 e2       	ldi	r24, 0x20	; 32
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	b3 01       	movw	r22, r6
    10c4:	2b d0       	rcall	.+86     	; 0x111c <fputc>
    10c6:	ea 94       	dec	r14
    10c8:	ee 20       	and	r14, r14
    10ca:	c9 f7       	brne	.-14     	; 0x10be <vfprintf+0x37c>
    10cc:	4d ce       	rjmp	.-870    	; 0xd68 <vfprintf+0x26>
    10ce:	f3 01       	movw	r30, r6
    10d0:	86 81       	ldd	r24, Z+6	; 0x06
    10d2:	97 81       	ldd	r25, Z+7	; 0x07
    10d4:	02 c0       	rjmp	.+4      	; 0x10da <vfprintf+0x398>
    10d6:	8f ef       	ldi	r24, 0xFF	; 255
    10d8:	9f ef       	ldi	r25, 0xFF	; 255
    10da:	2d 96       	adiw	r28, 0x0d	; 13
    10dc:	e2 e1       	ldi	r30, 0x12	; 18
    10de:	e1 c0       	rjmp	.+450    	; 0x12a2 <__epilogue_restores__>

000010e0 <__eerd_word_m8>:
    10e0:	a8 e1       	ldi	r26, 0x18	; 24
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	42 e0       	ldi	r20, 0x02	; 2
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	a5 c0       	rjmp	.+330    	; 0x1234 <__eerd_blraw_m8>

000010ea <__eewr_word_m8>:
    10ea:	b2 d0       	rcall	.+356    	; 0x1250 <__eewr_byte_m8>
    10ec:	27 2f       	mov	r18, r23
    10ee:	b1 c0       	rjmp	.+354    	; 0x1252 <__eewr_r18_m8>

000010f0 <strnlen_P>:
    10f0:	fc 01       	movw	r30, r24
    10f2:	05 90       	lpm	r0, Z+
    10f4:	61 50       	subi	r22, 0x01	; 1
    10f6:	70 40       	sbci	r23, 0x00	; 0
    10f8:	01 10       	cpse	r0, r1
    10fa:	d8 f7       	brcc	.-10     	; 0x10f2 <strnlen_P+0x2>
    10fc:	80 95       	com	r24
    10fe:	90 95       	com	r25
    1100:	8e 0f       	add	r24, r30
    1102:	9f 1f       	adc	r25, r31
    1104:	08 95       	ret

00001106 <strnlen>:
    1106:	fc 01       	movw	r30, r24
    1108:	61 50       	subi	r22, 0x01	; 1
    110a:	70 40       	sbci	r23, 0x00	; 0
    110c:	01 90       	ld	r0, Z+
    110e:	01 10       	cpse	r0, r1
    1110:	d8 f7       	brcc	.-10     	; 0x1108 <strnlen+0x2>
    1112:	80 95       	com	r24
    1114:	90 95       	com	r25
    1116:	8e 0f       	add	r24, r30
    1118:	9f 1f       	adc	r25, r31
    111a:	08 95       	ret

0000111c <fputc>:
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	8c 01       	movw	r16, r24
    1126:	eb 01       	movw	r28, r22
    1128:	8b 81       	ldd	r24, Y+3	; 0x03
    112a:	81 ff       	sbrs	r24, 1
    112c:	1b c0       	rjmp	.+54     	; 0x1164 <fputc+0x48>
    112e:	82 ff       	sbrs	r24, 2
    1130:	0d c0       	rjmp	.+26     	; 0x114c <fputc+0x30>
    1132:	2e 81       	ldd	r18, Y+6	; 0x06
    1134:	3f 81       	ldd	r19, Y+7	; 0x07
    1136:	8c 81       	ldd	r24, Y+4	; 0x04
    1138:	9d 81       	ldd	r25, Y+5	; 0x05
    113a:	28 17       	cp	r18, r24
    113c:	39 07       	cpc	r19, r25
    113e:	64 f4       	brge	.+24     	; 0x1158 <fputc+0x3c>
    1140:	e8 81       	ld	r30, Y
    1142:	f9 81       	ldd	r31, Y+1	; 0x01
    1144:	01 93       	st	Z+, r16
    1146:	f9 83       	std	Y+1, r31	; 0x01
    1148:	e8 83       	st	Y, r30
    114a:	06 c0       	rjmp	.+12     	; 0x1158 <fputc+0x3c>
    114c:	e8 85       	ldd	r30, Y+8	; 0x08
    114e:	f9 85       	ldd	r31, Y+9	; 0x09
    1150:	80 2f       	mov	r24, r16
    1152:	09 95       	icall
    1154:	00 97       	sbiw	r24, 0x00	; 0
    1156:	31 f4       	brne	.+12     	; 0x1164 <fputc+0x48>
    1158:	8e 81       	ldd	r24, Y+6	; 0x06
    115a:	9f 81       	ldd	r25, Y+7	; 0x07
    115c:	01 96       	adiw	r24, 0x01	; 1
    115e:	9f 83       	std	Y+7, r25	; 0x07
    1160:	8e 83       	std	Y+6, r24	; 0x06
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <fputc+0x4c>
    1164:	0f ef       	ldi	r16, 0xFF	; 255
    1166:	1f ef       	ldi	r17, 0xFF	; 255
    1168:	c8 01       	movw	r24, r16
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	1f 91       	pop	r17
    1170:	0f 91       	pop	r16
    1172:	08 95       	ret

00001174 <__ultoa_invert>:
    1174:	fa 01       	movw	r30, r20
    1176:	aa 27       	eor	r26, r26
    1178:	28 30       	cpi	r18, 0x08	; 8
    117a:	51 f1       	breq	.+84     	; 0x11d0 <__ultoa_invert+0x5c>
    117c:	20 31       	cpi	r18, 0x10	; 16
    117e:	81 f1       	breq	.+96     	; 0x11e0 <__ultoa_invert+0x6c>
    1180:	e8 94       	clt
    1182:	6f 93       	push	r22
    1184:	6e 7f       	andi	r22, 0xFE	; 254
    1186:	6e 5f       	subi	r22, 0xFE	; 254
    1188:	7f 4f       	sbci	r23, 0xFF	; 255
    118a:	8f 4f       	sbci	r24, 0xFF	; 255
    118c:	9f 4f       	sbci	r25, 0xFF	; 255
    118e:	af 4f       	sbci	r26, 0xFF	; 255
    1190:	b1 e0       	ldi	r27, 0x01	; 1
    1192:	3e d0       	rcall	.+124    	; 0x1210 <__ultoa_invert+0x9c>
    1194:	b4 e0       	ldi	r27, 0x04	; 4
    1196:	3c d0       	rcall	.+120    	; 0x1210 <__ultoa_invert+0x9c>
    1198:	67 0f       	add	r22, r23
    119a:	78 1f       	adc	r23, r24
    119c:	89 1f       	adc	r24, r25
    119e:	9a 1f       	adc	r25, r26
    11a0:	a1 1d       	adc	r26, r1
    11a2:	68 0f       	add	r22, r24
    11a4:	79 1f       	adc	r23, r25
    11a6:	8a 1f       	adc	r24, r26
    11a8:	91 1d       	adc	r25, r1
    11aa:	a1 1d       	adc	r26, r1
    11ac:	6a 0f       	add	r22, r26
    11ae:	71 1d       	adc	r23, r1
    11b0:	81 1d       	adc	r24, r1
    11b2:	91 1d       	adc	r25, r1
    11b4:	a1 1d       	adc	r26, r1
    11b6:	20 d0       	rcall	.+64     	; 0x11f8 <__ultoa_invert+0x84>
    11b8:	09 f4       	brne	.+2      	; 0x11bc <__ultoa_invert+0x48>
    11ba:	68 94       	set
    11bc:	3f 91       	pop	r19
    11be:	2a e0       	ldi	r18, 0x0A	; 10
    11c0:	26 9f       	mul	r18, r22
    11c2:	11 24       	eor	r1, r1
    11c4:	30 19       	sub	r19, r0
    11c6:	30 5d       	subi	r19, 0xD0	; 208
    11c8:	31 93       	st	Z+, r19
    11ca:	de f6       	brtc	.-74     	; 0x1182 <__ultoa_invert+0xe>
    11cc:	cf 01       	movw	r24, r30
    11ce:	08 95       	ret
    11d0:	46 2f       	mov	r20, r22
    11d2:	47 70       	andi	r20, 0x07	; 7
    11d4:	40 5d       	subi	r20, 0xD0	; 208
    11d6:	41 93       	st	Z+, r20
    11d8:	b3 e0       	ldi	r27, 0x03	; 3
    11da:	0f d0       	rcall	.+30     	; 0x11fa <__ultoa_invert+0x86>
    11dc:	c9 f7       	brne	.-14     	; 0x11d0 <__ultoa_invert+0x5c>
    11de:	f6 cf       	rjmp	.-20     	; 0x11cc <__ultoa_invert+0x58>
    11e0:	46 2f       	mov	r20, r22
    11e2:	4f 70       	andi	r20, 0x0F	; 15
    11e4:	40 5d       	subi	r20, 0xD0	; 208
    11e6:	4a 33       	cpi	r20, 0x3A	; 58
    11e8:	18 f0       	brcs	.+6      	; 0x11f0 <__ultoa_invert+0x7c>
    11ea:	49 5d       	subi	r20, 0xD9	; 217
    11ec:	31 fd       	sbrc	r19, 1
    11ee:	40 52       	subi	r20, 0x20	; 32
    11f0:	41 93       	st	Z+, r20
    11f2:	02 d0       	rcall	.+4      	; 0x11f8 <__ultoa_invert+0x84>
    11f4:	a9 f7       	brne	.-22     	; 0x11e0 <__ultoa_invert+0x6c>
    11f6:	ea cf       	rjmp	.-44     	; 0x11cc <__ultoa_invert+0x58>
    11f8:	b4 e0       	ldi	r27, 0x04	; 4
    11fa:	a6 95       	lsr	r26
    11fc:	97 95       	ror	r25
    11fe:	87 95       	ror	r24
    1200:	77 95       	ror	r23
    1202:	67 95       	ror	r22
    1204:	ba 95       	dec	r27
    1206:	c9 f7       	brne	.-14     	; 0x11fa <__ultoa_invert+0x86>
    1208:	00 97       	sbiw	r24, 0x00	; 0
    120a:	61 05       	cpc	r22, r1
    120c:	71 05       	cpc	r23, r1
    120e:	08 95       	ret
    1210:	9b 01       	movw	r18, r22
    1212:	ac 01       	movw	r20, r24
    1214:	0a 2e       	mov	r0, r26
    1216:	06 94       	lsr	r0
    1218:	57 95       	ror	r21
    121a:	47 95       	ror	r20
    121c:	37 95       	ror	r19
    121e:	27 95       	ror	r18
    1220:	ba 95       	dec	r27
    1222:	c9 f7       	brne	.-14     	; 0x1216 <__ultoa_invert+0xa2>
    1224:	62 0f       	add	r22, r18
    1226:	73 1f       	adc	r23, r19
    1228:	84 1f       	adc	r24, r20
    122a:	95 1f       	adc	r25, r21
    122c:	a0 1d       	adc	r26, r0
    122e:	08 95       	ret

00001230 <__eerd_block_m8>:
    1230:	dc 01       	movw	r26, r24
    1232:	cb 01       	movw	r24, r22

00001234 <__eerd_blraw_m8>:
    1234:	fc 01       	movw	r30, r24
    1236:	e1 99       	sbic	0x1c, 1	; 28
    1238:	fe cf       	rjmp	.-4      	; 0x1236 <__eerd_blraw_m8+0x2>
    123a:	06 c0       	rjmp	.+12     	; 0x1248 <__eerd_blraw_m8+0x14>
    123c:	ff bb       	out	0x1f, r31	; 31
    123e:	ee bb       	out	0x1e, r30	; 30
    1240:	e0 9a       	sbi	0x1c, 0	; 28
    1242:	31 96       	adiw	r30, 0x01	; 1
    1244:	0d b2       	in	r0, 0x1d	; 29
    1246:	0d 92       	st	X+, r0
    1248:	41 50       	subi	r20, 0x01	; 1
    124a:	50 40       	sbci	r21, 0x00	; 0
    124c:	b8 f7       	brcc	.-18     	; 0x123c <__eerd_blraw_m8+0x8>
    124e:	08 95       	ret

00001250 <__eewr_byte_m8>:
    1250:	26 2f       	mov	r18, r22

00001252 <__eewr_r18_m8>:
    1252:	e1 99       	sbic	0x1c, 1	; 28
    1254:	fe cf       	rjmp	.-4      	; 0x1252 <__eewr_r18_m8>
    1256:	9f bb       	out	0x1f, r25	; 31
    1258:	8e bb       	out	0x1e, r24	; 30
    125a:	2d bb       	out	0x1d, r18	; 29
    125c:	0f b6       	in	r0, 0x3f	; 63
    125e:	f8 94       	cli
    1260:	e2 9a       	sbi	0x1c, 2	; 28
    1262:	e1 9a       	sbi	0x1c, 1	; 28
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	01 96       	adiw	r24, 0x01	; 1
    1268:	08 95       	ret

0000126a <__prologue_saves__>:
    126a:	2f 92       	push	r2
    126c:	3f 92       	push	r3
    126e:	4f 92       	push	r4
    1270:	5f 92       	push	r5
    1272:	6f 92       	push	r6
    1274:	7f 92       	push	r7
    1276:	8f 92       	push	r8
    1278:	9f 92       	push	r9
    127a:	af 92       	push	r10
    127c:	bf 92       	push	r11
    127e:	cf 92       	push	r12
    1280:	df 92       	push	r13
    1282:	ef 92       	push	r14
    1284:	ff 92       	push	r15
    1286:	0f 93       	push	r16
    1288:	1f 93       	push	r17
    128a:	cf 93       	push	r28
    128c:	df 93       	push	r29
    128e:	cd b7       	in	r28, 0x3d	; 61
    1290:	de b7       	in	r29, 0x3e	; 62
    1292:	ca 1b       	sub	r28, r26
    1294:	db 0b       	sbc	r29, r27
    1296:	0f b6       	in	r0, 0x3f	; 63
    1298:	f8 94       	cli
    129a:	de bf       	out	0x3e, r29	; 62
    129c:	0f be       	out	0x3f, r0	; 63
    129e:	cd bf       	out	0x3d, r28	; 61
    12a0:	09 94       	ijmp

000012a2 <__epilogue_restores__>:
    12a2:	2a 88       	ldd	r2, Y+18	; 0x12
    12a4:	39 88       	ldd	r3, Y+17	; 0x11
    12a6:	48 88       	ldd	r4, Y+16	; 0x10
    12a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    12aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    12ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    12ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    12b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    12b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    12b4:	b9 84       	ldd	r11, Y+9	; 0x09
    12b6:	c8 84       	ldd	r12, Y+8	; 0x08
    12b8:	df 80       	ldd	r13, Y+7	; 0x07
    12ba:	ee 80       	ldd	r14, Y+6	; 0x06
    12bc:	fd 80       	ldd	r15, Y+5	; 0x05
    12be:	0c 81       	ldd	r16, Y+4	; 0x04
    12c0:	1b 81       	ldd	r17, Y+3	; 0x03
    12c2:	aa 81       	ldd	r26, Y+2	; 0x02
    12c4:	b9 81       	ldd	r27, Y+1	; 0x01
    12c6:	ce 0f       	add	r28, r30
    12c8:	d1 1d       	adc	r29, r1
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	ed 01       	movw	r28, r26
    12d6:	08 95       	ret

000012d8 <_exit>:
    12d8:	f8 94       	cli

000012da <__stop_program>:
    12da:	ff cf       	rjmp	.-2      	; 0x12da <__stop_program>
